<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <b4x_version>7.28</b4x_version>
  <dependsOn>jcore</dependsOn>
  <dependsOn>jfx</dependsOn>
  <dependsOn>banano</dependsOn>
  <dependsOn>json</dependsOn>
  <dependsOn>byteconverter</dependsOn>
  <dependsOn>jrandomaccessfile</dependsOn>
  <class>
    <name>b4j.example.bananokendohtmltag</name>
    <shortname>BANanoKendoHtmlTag</shortname>
    <event>Click (event As BANanoEvent)</event>
    <designerProperty>Key: Classes, DisplayName: Classes, FieldType: String, DefaultValue: , Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style, DisplayName: Style, FieldType: String, DefaultValue: , Description: Styles added to the HTML tag.</designerProperty>
    <designerProperty>Key: TagName, DisplayName: TagName, FieldType: String, DefaultValue: div, Description: Tagname</designerProperty>
    <designerProperty>Key: Type, DisplayName: Type, FieldType: String, DefaultValue: , Description: Type</designerProperty>
    <designerProperty>Key: Text, DisplayName: Text, FieldType: String, DefaultValue: , Description: Text</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getHtml" HideFromIDE="true">_gethtml</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getText" HideFromIDE="true">_gettext</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize2">_initialize2</name>
      <returntype>String</returntype>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setHtml" HideFromIDE="true">_sethtml</name>
      <returntype>String</returntype>
      <parameter>
        <name>Html</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setText" HideFromIDE="true">_settext</name>
      <returntype>String</returntype>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Trigger">_trigger</name>
      <returntype>String</returntype>
      <parameter>
        <name>event</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>params</name>
        <type>String[]</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Html">_html</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Text">_text</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
  </class>
  <class>
    <name>b4j.example.kendo</name>
    <shortname>Kendo</shortname>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Alert">_alert</name>
      <returntype>String</returntype>
      <parameter>
        <name>Title</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Content</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ClearConsole">_clearconsole</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="CloseConsole">_closeconsole</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Confirm">_confirm</name>
      <returntype>Object</returntype>
      <parameter>
        <name>Title</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Content</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>OKCallback</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>CancelCallback</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ConsoleLog">_consolelog</name>
      <returntype>String</returntype>
      <parameter>
        <name>LogMessage</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="CreateConsole">_createconsole</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="CreateConsole2">_createconsole2</name>
      <returntype>String</returntype>
      <parameter>
        <name>Title</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Top</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Left</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Width</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getFirstDay" HideFromIDE="true">_getfirstday</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getGUID" HideFromIDE="true">_getguid</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="OpenConsole">_openconsole</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Progress">_progress</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Enabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Prompt">_prompt</name>
      <returntype>Object</returntype>
      <parameter>
        <name>Title</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Content</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>DefaultValue</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>OKCallback</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>CancelCallback</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SaveAs">_saveas</name>
      <returntype>String</returntype>
      <parameter>
        <name>Filename</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFirstDay" HideFromIDE="true">_setfirstday</name>
      <returntype>String</returntype>
      <parameter>
        <name>FirstDay</name>
        <type>int</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="FirstDay">_firstday</name>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="GUID">_guid</name>
      <returntype>String</returntype>
    </property>
    <field>
      <name DesignerName="Console">_console</name>
      <returntype>b4j.example.bananokendowindow</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendotextfield</name>
    <shortname>BANanoKendoTextField</shortname>
    <event>Focus(Event As BANanoEvent)</event>
    <event>Blur(Event As BANanoEvent)</event>
    <event>Keydown(Event As BANanoEvent)</event>
    <event>KeyPress(Event As BANanoEvent)</event>
    <event>KeyUp(Event As BANanoEvent)</event>
    <event>Click(Event As BANanoEvent)</event>
    <event>ContextMenu(Event As BANanoEvent)</event>
    <event>Dblclick(Event As BANanoEvent)</event>
    <event>Change(Event As BANanoEvent)</event>
    <designerProperty>Key: LabelText,        DisplayName: LabelText,        FieldType: String, DefaultValue: , Description: LabelText</designerProperty>
    <designerProperty>Key: Value,            DisplayName: Value,            FieldType: String, DefaultValue: , Description: Value</designerProperty>
    <designerProperty>Key: Placeholder,      DisplayName: Placeholder,      FieldType: String, DefaultValue: , Description: Placeholder</designerProperty>
    <designerProperty>Key: LabelStyle,       DisplayName: LabelStyle,       FieldType: String, DefaultValue: , Description: Styles added to the label tag.</designerProperty>
    <designerProperty>Key: LabelClasses,     DisplayName: LabelClasses,     FieldType: String, DefaultValue: , Description: Classes added to the label tag.</designerProperty>
    <designerProperty>Key: TextFieldStyle,   DisplayName: TextFieldStyle,   FieldType: String, DefaultValue: , Description: Styles added to the input tag.</designerProperty>
    <designerProperty>Key: TextFieldClasses, DisplayName: TextFieldClasses, FieldType: String, DefaultValue: , Description: Classes added to the input tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getLabelText" HideFromIDE="true">_getlabeltext</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getValue" HideFromIDE="true">_getvalue</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setLabelText" HideFromIDE="true">_setlabeltext</name>
      <returntype>String</returntype>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValue" HideFromIDE="true">_setvalue</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="LabelText">_labeltext</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Value">_value</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bLabelElement">_blabelelement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="bInputElement">_binputelement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendocheckbox</name>
    <shortname>BANanoKendoCheckBox</shortname>
    <event>Click(Event As BANanoEvent)</event>
    <event>ContextMenu(Event As BANanoEvent)</event>
    <event>Change(Event As BANanoEvent)</event>
    <designerProperty>Key: LabelText,       DisplayName: LabelText,       FieldType: String,  DefaultValue: ,      Description: LabelText</designerProperty>
    <designerProperty>Key: Checked,         DisplayName: Checked,         FieldType: Boolean, DefaultValue: False, Description: Checked</designerProperty>
    <designerProperty>Key: LabelStyle,      DisplayName: LabelStyle,      FieldType: String,  DefaultValue: ,      Description: Styles added to the label tag.</designerProperty>
    <designerProperty>Key: LabelClasses,    DisplayName: LabelClasses,    FieldType: String,  DefaultValue: ,      Description: Classes added to the label tag.</designerProperty>
    <designerProperty>Key: CheckBoxStyle,   DisplayName: CheckBoxStyle,   FieldType: String,  DefaultValue: ,      Description: Styles added to the checkbox tag.</designerProperty>
    <designerProperty>Key: CheckBoxClasses, DisplayName: CheckBoxClasses, FieldType: String,  DefaultValue: ,      Description: Classes added to the chackbox tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getChecked" HideFromIDE="true">_getchecked</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getLabelText" HideFromIDE="true">_getlabeltext</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setChecked" HideFromIDE="true">_setchecked</name>
      <returntype>String</returntype>
      <parameter>
        <name>Checked</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setLabelText" HideFromIDE="true">_setlabeltext</name>
      <returntype>String</returntype>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Checked">_checked</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="LabelText">_labeltext</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <field>
      <name DesignerName="bLabelElement">_blabelelement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="bCheckBoxElement">_bcheckboxelement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendoautocomplete</name>
    <shortname>BANanoKendoAutoComplete</shortname>
    <event>Change(Event As Map)</event>
    <event>Close(Event As Map)</event>
    <event>DataBound(Event As Map)</event>
    <event>Filtering(Event As Map)</event>
    <event>Open(Event As Map)</event>
    <event>Select(Event As Map)</event>
    <designerProperty>Key: AutoWidth,          DisplayName: AutoWidth,          FieldType: Boolean, DefaultValue: False,      Description: If set to true the widget automatically adjusts the width of the popup element and does not wrap up the item label.</designerProperty>
    <designerProperty>Key: ClearButton,        DisplayName: ClearButton,        FieldType: Boolean, DefaultValue: True,       Description: Unless this options is set to false a button will appear when hovering the widget. Clicking that button will reset the widget's value and will trigger the change event.</designerProperty>
    <designerProperty>Key: DataTextField,      DisplayName: DataTextField,      FieldType: String,  DefaultValue: ,           Description: The field of the data item used when searching for suggestions. This is the text that will be displayed in the list of matched results.</designerProperty>
    <designerProperty>Key: Delay,              DisplayName: Delay,              FieldType: Int,     DefaultValue: 200,        Description: The delay in milliseconds between a keystroke and when the widget displays the suggestion popup.</designerProperty>
    <designerProperty>Key: Enabled,            DisplayName: Enabled,            FieldType: Boolean, DefaultValue: True,       Description: If set to false the widget will be disabled and will not allow user input. The widget is enabled by default and allows user input.</designerProperty>
    <designerProperty>Key: EnforceMinLength,   DisplayName: EnforceMinLength,   FieldType: Boolean, DefaultValue: False,      Description: If set to true the widget will not show all items when the text of the search input cleared. By default the widget shows all items when the text of the search input is cleared. Works in conjunction with minLength.</designerProperty>
    <designerProperty>Key: Filter,             DisplayName: Filter,             FieldType: String,  DefaultValue: startswith, Description: The filtering method used to determine the suggestions for the current value. The default filter is "startswith" - all data items which begin with the current widget value are displayed in the suggestion popup.</designerProperty>
    <designerProperty>Key: Height,             DisplayName: Height,             FieldType: Int,     DefaultValue: 200,        Description: The height of the suggestion popup in pixels. The default value is 200 pixels.</designerProperty>
    <designerProperty>Key: HighlightFirst,     DisplayName: HighlightFirst,     FieldType: Boolean, DefaultValue: True,       Description: If set to true the first suggestion will be automatically highlighted.</designerProperty>
    <designerProperty>Key: IgnoreCase,         DisplayName: IgnoreCase,         FieldType: Boolean, DefaultValue: True,       Description: If set to false case-sensitive search will be performed to find suggestions. The widget performs case-insensitive searching by default.</designerProperty>
    <designerProperty>Key: MinLength,          DisplayName: MinLength,          FieldType: Int,     DefaultValue: 1,          Description: The minimum number of characters the user must type before a search is performed. Set to higher value than 1 if the search could match a lot of items.</designerProperty>
    <designerProperty>Key: Placeholder,        DisplayName: Placeholder,        FieldType: String,  DefaultValue: ,           Description: The hint displayed by the widget when it is empty. Not set by default.</designerProperty>
    <designerProperty>Key: Separator,          DisplayName: Separator,          FieldType: String,  DefaultValue: ,           Description: The character used to separate multiple values. Empty by default.</designerProperty>
    <designerProperty>Key: Suggest,            DisplayName: Suggest,            FieldType: Boolean, DefaultValue: False,      Description: If set to true the widget will automatically use the first suggestion as its value.</designerProperty>
    <designerProperty>Key: FixedGroupTemplate, DisplayName: FixedGroupTemplate, FieldType: String,  DefaultValue: ,           Description: The template used to render the fixed header group. By default the widget displays only the value of the current group.</designerProperty>
    <designerProperty>Key: FooterTemplate,     DisplayName: FooterTemplate,     FieldType: String,  DefaultValue: ,           Description: The template used to render the footer template. The footer template receives the widget itself as a part of the data argument. Use the widget fields directly in the template.</designerProperty>
    <designerProperty>Key: GroupTemplate,      DisplayName: GroupTemplate,      FieldType: String,  DefaultValue: ,           Description: The template used to render the groups. By default the widget displays only the value of the group.</designerProperty>
    <designerProperty>Key: NoDataTemplate,     DisplayName: NoDataTemplate,     FieldType: String,  DefaultValue: ,           Description: The template used to render the "no data" template which will be displayed if no results are found or the underlying data source is empty. The noData template receives the widget itself as a part of the data argument. The template will be evaluated on every widget data bound.</designerProperty>
    <designerProperty>Key: HeaderTemplate,     DisplayName: HeaderTemplate,     FieldType: String,  DefaultValue: ,           Description: Specifies a static HTML content, which will be rendered as a header of the popup element.</designerProperty>
    <designerProperty>Key: Template,           DisplayName: Template,           FieldType: String,  DefaultValue: ,           Description: The template used to render the items in the popup list.</designerProperty>
    <designerProperty>Key: Classes,            DisplayName: Classes,            FieldType: String, DefaultValue: ,            Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,              DisplayName: Style,              FieldType: String, DefaultValue: ,            Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getAnimation" HideFromIDE="true">_getanimation</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getAutoWidth" HideFromIDE="true">_getautowidth</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClearButton" HideFromIDE="true">_getclearbutton</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getDataSource" HideFromIDE="true">_getdatasource</name>
      <returntype>Object</returntype>
    </method>
    <method>
      <name DesignerName="getDataTextField" HideFromIDE="true">_getdatatextfield</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDelay" HideFromIDE="true">_getdelay</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getEnabled" HideFromIDE="true">_getenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getEnforceMinLength" HideFromIDE="true">_getenforceminlength</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getFilter" HideFromIDE="true">_getfilter</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getHeight" HideFromIDE="true">_getheight</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getHighlightFirst" HideFromIDE="true">_gethighlightfirst</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getIgnoreCase" HideFromIDE="true">_getignorecase</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getMinLength" HideFromIDE="true">_getminlength</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getPlaceholder" HideFromIDE="true">_getplaceholder</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getSeparator" HideFromIDE="true">_getseparator</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getSuggest" HideFromIDE="true">_getsuggest</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getValue" HideFromIDE="true">_getvalue</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getValuePrimitive" HideFromIDE="true">_getvalueprimitive</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setAnimation" HideFromIDE="true">_setanimation</name>
      <comment>
Configures the opening and closing animations of the suggestion popup.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Animation</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAutoWidth" HideFromIDE="true">_setautowidth</name>
      <comment>
If set to true, the widget automatically adjusts the width of the popup element and does not wrap up the item label.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>AutoWidth</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClearButton" HideFromIDE="true">_setclearbutton</name>
      <comment>
Unless this options is set to false, a button will appear when hovering the widget.
Clicking that button will reset the widget's value and will trigger the change event.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ClearButton</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataSource" HideFromIDE="true">_setdatasource</name>
      <comment>
The data source of the widget which is used to display a list of values.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DataSource</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataTextField" HideFromIDE="true">_setdatatextfield</name>
      <comment>
The field of the data item that provides the text content of the list items.
The widget will filter the data source based on this field.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DataTextField</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDelay" HideFromIDE="true">_setdelay</name>
      <comment>
Specifies the delay in milliseconds after which the MultiSelect will start filtering dataSource.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Delay</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEnabled" HideFromIDE="true">_setenabled</name>
      <comment>
If set to false the widget will be disabled and will not allow user input.
The widget is enabled by default and allows user input.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Enabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEnforceMinLength" HideFromIDE="true">_setenforceminlength</name>
      <comment>
If set to true the widget will not show all items when the text of the search input cleared.
By default the widget shows all items when the text of the search input is cleared.
Works in conjunction with minLength.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>EnforceMinLength</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFilter" HideFromIDE="true">_setfilter</name>
      <comment>
The filtering method used to determine the suggestions for the current value.
Filtration is turned of by default, and can be performed over string values
only (either the widget's data has to be an array of strings, or over the field,
configured in the dataTextField option).
The supported filter values are 'startswith', 'endswith' and 'contains'.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Filter</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setHeight" HideFromIDE="true">_setheight</name>
      <comment>
The height of the suggestion popup in pixels. The default value is 200 pixels.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setHighlightFirst" HideFromIDE="true">_sethighlightfirst</name>
      <comment>
If set to true the first suggestion will be automatically highlighted.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>HighlightFirst</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setIgnoreCase" HideFromIDE="true">_setignorecase</name>
      <comment>
If set to false case-sensitive search will be performed to find suggestions.
The widget performs case-insensitive searching by default.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>IgnoreCase</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMinLength" HideFromIDE="true">_setminlength</name>
      <comment>
The minimum number of characters the user must type before a search is performed.
Set to a higher value if the search could match a lot of items.
A zero value means that a request will be made as soon as the user focuses the widget.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MinLength</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setPlaceholder" HideFromIDE="true">_setplaceholder</name>
      <comment>
The hint displayed by the widget when it is empty. Not set by default.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Placeholder</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSeparator" HideFromIDE="true">_setseparator</name>
      <comment>
The character used to separate multiple values. Empty by default.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Separator</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSuggest" HideFromIDE="true">_setsuggest</name>
      <comment>
If set to true the widget will automatically use the first suggestion as its value.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Suggest</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValue" HideFromIDE="true">_setvalue</name>
      <comment>
Define the value of the widget

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValuePrimitive" HideFromIDE="true">_setvalueprimitive</name>
      <comment>
Specifies the value binding behavior for the widget.
If set to true the View-Model field will be updated with the selected item value field.
If set to false, the View-Model field will be updated with the selected item.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ValuePrimitive</name>
        <type>boolean</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Animation">_animation</name>
      <comment>
Configures the opening and closing animations of the suggestion popup.

</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AutoWidth">_autowidth</name>
      <comment>
If set to true, the widget automatically adjusts the width of the popup element and does not wrap up the item label.

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="ClearButton">_clearbutton</name>
      <comment>
Unless this options is set to false, a button will appear when hovering the widget.
Clicking that button will reset the widget's value and will trigger the change event.

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataSource">_datasource</name>
      <comment>
The data source of the widget which is used to display a list of values.

</comment>
      <returntype>Object</returntype>
      <parameter>
        <name>Value</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataTextField">_datatextfield</name>
      <comment>
The field of the data item that provides the text content of the list items.
The widget will filter the data source based on this field.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Delay">_delay</name>
      <comment>
Specifies the delay in milliseconds after which the MultiSelect will start filtering dataSource.

</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Enabled">_enabled</name>
      <comment>
If set to false the widget will be disabled and will not allow user input.
The widget is enabled by default and allows user input.

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="EnforceMinLength">_enforceminlength</name>
      <comment>
If set to true the widget will not show all items when the text of the search input cleared.
By default the widget shows all items when the text of the search input is cleared.
Works in conjunction with minLength.

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Filter">_filter</name>
      <comment>
The filtering method used to determine the suggestions for the current value.
Filtration is turned of by default, and can be performed over string values
only (either the widget's data has to be an array of strings, or over the field,
configured in the dataTextField option).
The supported filter values are 'startswith', 'endswith' and 'contains'.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Height">_height</name>
      <comment>
The height of the suggestion popup in pixels. The default value is 200 pixels.

</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="HighlightFirst">_highlightfirst</name>
      <comment>
If set to true the first suggestion will be automatically highlighted.

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="IgnoreCase">_ignorecase</name>
      <comment>
If set to false case-sensitive search will be performed to find suggestions.
The widget performs case-insensitive searching by default.

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MinLength">_minlength</name>
      <comment>
The minimum number of characters the user must type before a search is performed.
Set to a higher value if the search could match a lot of items.
A zero value means that a request will be made as soon as the user focuses the widget.

</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Placeholder">_placeholder</name>
      <comment>
The hint displayed by the widget when it is empty. Not set by default.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Separator">_separator</name>
      <comment>
The character used to separate multiple values. Empty by default.

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Suggest">_suggest</name>
      <comment>
If set to true the widget will automatically use the first suggestion as its value.

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Value">_value</name>
      <comment>
Define the value of the widget

</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="ValuePrimitive">_valueprimitive</name>
      <comment>
Specifies the value binding behavior for the widget.
If set to true the View-Model field will be updated with the selected item value field.
If set to false, the View-Model field will be updated with the selected item.

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendomultiselect</name>
    <shortname>BANanoKendoMultiSelect</shortname>
    <event>Change(Event As Map)</event>
    <event>Close(Event As Map)</event>
    <event>DataBound(Event As Map)</event>
    <event>Filtering(Event As Map)</event>
    <event>Open(Event As Map)</event>
    <event>Select(Event As Map)</event>
    <event>Deselect(Event As Map)</event>
    <designerProperty>Key: AutoBind,           DisplayName: AutoBind,           FieldType: Boolean, DefaultValue: True,                                           Description: If set to false the widget will not bind to the data source during initialization. In this case data binding will occur when the change event of the data source is fired.</designerProperty>
    <designerProperty>Key: AutoClose,          DisplayName: AutoClose,          FieldType: Boolean, DefaultValue: True,                                           Description: Controls whether to close the widget suggestion list on item selection.</designerProperty>
    <designerProperty>Key: AutoWidth,          DisplayName: AutoWidth,          FieldType: Boolean, DefaultValue: False,                                          Description: If set to true the widget automatically adjusts the width of the popup element and does not wrap up the item label.</designerProperty>
    <designerProperty>Key: ClearButton,        DisplayName: ClearButton,        FieldType: Boolean, DefaultValue: True,                                           Description: Unless this options is set to false a button will appear when hovering the widget. Clicking that button will reset the widget's value and will trigger the change event.</designerProperty>
    <designerProperty>Key: DataTextField,      DisplayName: DataTextField,      FieldType: String,  DefaultValue: ,                                               Description: The field of the data item that provides the text content of the list items. The widget will filter the data source based on this field.</designerProperty>
    <designerProperty>Key: DataValueField,     DisplayName: DataValueField,     FieldType: String,  DefaultValue: ,                                               Description: The field of the data item that provides the value of the widget.</designerProperty>
    <designerProperty>Key: Delay,              DisplayName: Delay,              FieldType: Int,     DefaultValue: 200,                                            Description: Specifies the delay in milliseconds after which the MultiSelect will start filtering dataSource.</designerProperty>
    <designerProperty>Key: Enabled,            DisplayName: Enabled,            FieldType: Boolean, DefaultValue: True,                                           Description: If set to false the widget will be disabled and will not allow user input. The widget is enabled by default and allows user input.</designerProperty>
    <designerProperty>Key: EnforceMinLength,   DisplayName: EnforceMinLength,   FieldType: Boolean, DefaultValue: False,                                          Description: If set to true the widget will not show all items when the text of the search input cleared. By default the widget shows all items when the text of the search input is cleared. Works in conjunction with minLength.</designerProperty>
    <designerProperty>Key: Filter,             DisplayName: Filter,             FieldType: String,  DefaultValue: startswith, List: startswith|endswith|contains, Description: The filtering method used to determine the suggestions for the current value. Filtration is turned of by default and can be performed over string values only (either the widget's data has to be an array of strings or over the field configured in the dataTextField option).</designerProperty>
    <designerProperty>Key: Height,             DisplayName: Height,             FieldType: Int,     DefaultValue: 200,                                            Description: The height of the suggestion popup in pixels. The default value is 200 pixels.</designerProperty>
    <designerProperty>Key: HighlightFirst,     DisplayName: HighlightFirst,     FieldType: Boolean, DefaultValue: True,                                           Description: If set to true the first suggestion will be automatically highlighted.</designerProperty>
    <designerProperty>Key: IgnoreCase,         DisplayName: IgnoreCase,         FieldType: Boolean, DefaultValue: True,                                           Description: If set to false case-sensitive search will be performed to find suggestions. The widget performs case-insensitive searching by default.</designerProperty>
    <designerProperty>Key: MaxSelectedItems,   DisplayName: MaxSelectedItems,   FieldType: Int,     DefaultValue: 0,                                              Description: Defines the limit of the selected items. If set to 0 widget will not limit number of the selected items.</designerProperty>
    <designerProperty>Key: MinLength,          DisplayName: MinLength,          FieldType: Int,     DefaultValue: 1,                                              Description: The minimum number of characters the user must type before a search is performed. Set to a higher value if the search could match a lot of items. A zero value means that a request will be made as soon as the user focuses the widget.</designerProperty>
    <designerProperty>Key: Placeholder,        DisplayName: Placeholder,        FieldType: String,  DefaultValue: ,                                               Description: The hint displayed by the widget when it is empty. Not set by default.</designerProperty>
    <designerProperty>Key: TagMode,            DisplayName: TagMode,            FieldType: String,  DefaultValue: multiple, List: multiple|single,                Description: The mode used to render the selected tags.</designerProperty>
    <designerProperty>Key: ValuePrimitive,     DisplayName: ValuePrimitive,     FieldType: Boolean, DefaultValue: False,                                          Description: Specifies the value binding behavior for the widget. If set to true the View-Model field will be updated with the selected item value field. If set to false the View-Model field will be updated with the selected item.</designerProperty>
    <designerProperty>Key: FixedGroupTemplate, DisplayName: FixedGroupTemplate, FieldType: String,  DefaultValue: ,                                               Description: The template used to render the fixed header group. By default the widget displays only the value of the current group.</designerProperty>
    <designerProperty>Key: FooterTemplate,     DisplayName: FooterTemplate,     FieldType: String,  DefaultValue: ,                                               Description: The template used to render the footer template. The footer template receives the widget itself as a part of the data argument. Use the widget fields directly in the template.</designerProperty>
    <designerProperty>Key: GroupTemplate,      DisplayName: GroupTemplate,      FieldType: String,  DefaultValue: ,                                               Description: The template used to render the groups. By default the widget displays only the value of the group.</designerProperty>
    <designerProperty>Key: HeaderTemplate,     DisplayName: HeaderTemplate,     FieldType: String,  DefaultValue: ,                                               Description: Specifies a static HTML content, which will be rendered as a header of the popup element.</designerProperty>
    <designerProperty>Key: ItemTemplate,       DisplayName: ItemTemplate,       FieldType: String,  DefaultValue: ,                                               Description: The template used to render the items in the popup list.</designerProperty>
    <designerProperty>Key: NoDataTemplate,     DisplayName: NoDataTemplate,     FieldType: String,  DefaultValue: ,                                               Description: The template used to render the "no data" template which will be displayed if no results are found or the underlying data source is empty. The noData template receives the widget itself as a part of the data argument. The template will be evaluated on every widget data bound.</designerProperty>
    <designerProperty>Key: TagTemplate,        DisplayName: TagTemplate,        FieldType: String,  DefaultValue: ,                                               Description: The template used to render the tags.</designerProperty>
    <designerProperty>Key: Classes,            DisplayName: Classes,            FieldType: String,  DefaultValue: ,                                               Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,              DisplayName: Style,              FieldType: String,  DefaultValue: ,                                               Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getAnimation" HideFromIDE="true">_getanimation</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getAutoBind" HideFromIDE="true">_getautobind</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getAutoClose" HideFromIDE="true">_getautoclose</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getAutoWidth" HideFromIDE="true">_getautowidth</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClearButton" HideFromIDE="true">_getclearbutton</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getDataSource" HideFromIDE="true">_getdatasource</name>
      <returntype>Object</returntype>
    </method>
    <method>
      <name DesignerName="getDataTextField" HideFromIDE="true">_getdatatextfield</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDataValueField" HideFromIDE="true">_getdatavaluefield</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDelay" HideFromIDE="true">_getdelay</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getEnabled" HideFromIDE="true">_getenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getEnforceMinLength" HideFromIDE="true">_getenforceminlength</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getFilter" HideFromIDE="true">_getfilter</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getHeight" HideFromIDE="true">_getheight</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getHighlightFirst" HideFromIDE="true">_gethighlightfirst</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getIgnoreCase" HideFromIDE="true">_getignorecase</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getMaxSelectedItems" HideFromIDE="true">_getmaxselecteditems</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getMinLength" HideFromIDE="true">_getminlength</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getPlaceholder" HideFromIDE="true">_getplaceholder</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getTagMode" HideFromIDE="true">_gettagmode</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getValue" HideFromIDE="true">_getvalue</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getValuePrimitive" HideFromIDE="true">_getvalueprimitive</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setAnimation" HideFromIDE="true">_setanimation</name>
      <comment>
Configures the opening and closing animations of the suggestion popup.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/animation
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Animation</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAutoBind" HideFromIDE="true">_setautobind</name>
      <comment>
Controls whether to bind the widget to the data source on initialization.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/autobind
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>AutoBind</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAutoClose" HideFromIDE="true">_setautoclose</name>
      <comment>
Controls whether to close the widget suggestion list on item selection.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/autoclose
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>AutoClose</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAutoWidth" HideFromIDE="true">_setautowidth</name>
      <comment>
If set to true, the widget automatically adjusts the width of the popup element and does not wrap up the item label.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/autowidth
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>AutoWidth</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClearButton" HideFromIDE="true">_setclearbutton</name>
      <comment>
Unless this options is set to false, a button will appear when hovering the widget.
Clicking that button will reset the widget's value and will trigger the change event.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/clearbutton
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ClearButton</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataSource" HideFromIDE="true">_setdatasource</name>
      <comment>
The data source of the widget which is used to display a list of values.
https://docs.telerik.com/kendo-ui/api/javascript/ui/panelbar/configuration/datasource
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DataSource</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataTextField" HideFromIDE="true">_setdatatextfield</name>
      <comment>
The field of the data item that provides the text content of the list items.
The widget will filter the data source based on this field.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/datatextfield
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DataTextField</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataValueField" HideFromIDE="true">_setdatavaluefield</name>
      <comment>
The field of the data item that provides the value of the widget.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/datavaluefield
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DataValueField</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDelay" HideFromIDE="true">_setdelay</name>
      <comment>
Specifies the delay in milliseconds after which the MultiSelect will start filtering dataSource.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/delay
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Delay</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEnabled" HideFromIDE="true">_setenabled</name>
      <comment>
If set to false the widget will be disabled and will not allow user input.
The widget is enabled by default and allows user input.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/enable
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Enabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEnforceMinLength" HideFromIDE="true">_setenforceminlength</name>
      <comment>
If set to true the widget will not show all items when the text of the search input cleared.
By default the widget shows all items when the text of the search input is cleared.
Works in conjunction with minLength.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/enforceminlength
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>EnforceMinLength</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFilter" HideFromIDE="true">_setfilter</name>
      <comment>
The filtering method used to determine the suggestions for the current value.
Filtration is turned of by default, and can be performed over string values
only (either the widget's data has to be an array of strings, or over the field,
 configured in the dataTextField option).
The supported filter values are 'startswith', 'endswith' and 'contains'.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/filter
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Filter</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setHeight" HideFromIDE="true">_setheight</name>
      <comment>
The height of the suggestion popup in pixels. The default value is 200 pixels.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/height
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setHighlightFirst" HideFromIDE="true">_sethighlightfirst</name>
      <comment>
If set to true the first suggestion will be automatically highlighted.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/highlightfirst
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>HighlightFirst</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setIgnoreCase" HideFromIDE="true">_setignorecase</name>
      <comment>
If set to false case-sensitive search will be performed to find suggestions.
The widget performs case-insensitive searching by default.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/ignorecase
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>IgnoreCase</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMaxSelectedItems" HideFromIDE="true">_setmaxselecteditems</name>
      <comment>
Defines the limit of the selected items. If set to 0 the widget will not limit number of the selected items.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/maxselecteditems
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MaxSelectedItems</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMinLength" HideFromIDE="true">_setminlength</name>
      <comment>
The minimum number of characters the user must type before a search is performed.
Set to a higher value if the search could match a lot of items.
A zero value means that a request will be made as soon as the user focuses the widget.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/minlength
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MinLength</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setPlaceholder" HideFromIDE="true">_setplaceholder</name>
      <comment>
The hint displayed by the widget when it is empty. Not set by default.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/placeholder
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Placeholder</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTagMode" HideFromIDE="true">_settagmode</name>
      <comment>
The mode used to render the selected tags.
The available modes are:
  multiple - renders a tag for every selected value
  single - renders only one tag that shows the number of the selected values
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/tagmode
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>TagMode</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValue" HideFromIDE="true">_setvalue</name>
      <comment>
Define the value of the widget
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/value
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValuePrimitive" HideFromIDE="true">_setvalueprimitive</name>
      <comment>
Specifies the value binding behavior for the widget.
If set to true the View-Model field will be updated with the selected item value field.
If set to false, the View-Model field will be updated with the selected item.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/valueprimitive
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ValuePrimitive</name>
        <type>boolean</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Animation">_animation</name>
      <comment>
Configures the opening and closing animations of the suggestion popup.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/animation
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AutoBind">_autobind</name>
      <comment>
Controls whether to bind the widget to the data source on initialization.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/autobind
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AutoClose">_autoclose</name>
      <comment>
Controls whether to close the widget suggestion list on item selection.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/autoclose
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="AutoWidth">_autowidth</name>
      <comment>
If set to true, the widget automatically adjusts the width of the popup element and does not wrap up the item label.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/autowidth
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="ClearButton">_clearbutton</name>
      <comment>
Unless this options is set to false, a button will appear when hovering the widget.
Clicking that button will reset the widget's value and will trigger the change event.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/clearbutton
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataSource">_datasource</name>
      <comment>
The data source of the widget which is used to display a list of values.
https://docs.telerik.com/kendo-ui/api/javascript/ui/panelbar/configuration/datasource
</comment>
      <returntype>Object</returntype>
      <parameter>
        <name>Value</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataTextField">_datatextfield</name>
      <comment>
The field of the data item that provides the text content of the list items.
The widget will filter the data source based on this field.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/datatextfield
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataValueField">_datavaluefield</name>
      <comment>
The field of the data item that provides the value of the widget.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/datavaluefield
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Delay">_delay</name>
      <comment>
Specifies the delay in milliseconds after which the MultiSelect will start filtering dataSource.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/delay
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Enabled">_enabled</name>
      <comment>
If set to false the widget will be disabled and will not allow user input.
The widget is enabled by default and allows user input.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/enable
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="EnforceMinLength">_enforceminlength</name>
      <comment>
If set to true the widget will not show all items when the text of the search input cleared.
By default the widget shows all items when the text of the search input is cleared.
Works in conjunction with minLength.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/enforceminlength
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Filter">_filter</name>
      <comment>
The filtering method used to determine the suggestions for the current value.
Filtration is turned of by default, and can be performed over string values
only (either the widget's data has to be an array of strings, or over the field,
 configured in the dataTextField option).
The supported filter values are 'startswith', 'endswith' and 'contains'.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/filter
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Height">_height</name>
      <comment>
The height of the suggestion popup in pixels. The default value is 200 pixels.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/height
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="HighlightFirst">_highlightfirst</name>
      <comment>
If set to true the first suggestion will be automatically highlighted.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/highlightfirst
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="IgnoreCase">_ignorecase</name>
      <comment>
If set to false case-sensitive search will be performed to find suggestions.
The widget performs case-insensitive searching by default.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/ignorecase
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MaxSelectedItems">_maxselecteditems</name>
      <comment>
Defines the limit of the selected items. If set to 0 the widget will not limit number of the selected items.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/maxselecteditems
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MinLength">_minlength</name>
      <comment>
The minimum number of characters the user must type before a search is performed.
Set to a higher value if the search could match a lot of items.
A zero value means that a request will be made as soon as the user focuses the widget.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/minlength
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Placeholder">_placeholder</name>
      <comment>
The hint displayed by the widget when it is empty. Not set by default.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/placeholder
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="TagMode">_tagmode</name>
      <comment>
The mode used to render the selected tags.
The available modes are:
  multiple - renders a tag for every selected value
  single - renders only one tag that shows the number of the selected values
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/tagmode
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Value">_value</name>
      <comment>
Define the value of the widget
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/value
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="ValuePrimitive">_valueprimitive</name>
      <comment>
Specifies the value binding behavior for the widget.
If set to true the View-Model field will be updated with the selected item value field.
If set to false, the View-Model field will be updated with the selected item.
https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/valueprimitive
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendolistview</name>
    <shortname>BANanoKendoListView</shortname>
    <event>Cancel(Event As Map)</event>
    <event>Change(Event As Map)</event>
    <event>DataBound(Event As Map)</event>
    <event>DragBinding(Event As Map)</event>
    <event>Edit(Event As Map)</event>
    <event>Remove(Event As Map)</event>
    <event>Save(Event As Map)</event>
    <designerProperty>Key: Template,     DisplayName: Template,     FieldType: String, DefaultValue: ,                             Description: Specifies widget item template.</designerProperty>
    <designerProperty>Key: AltTemplate,  DisplayName: AltTemplate,  FieldType: String, DefaultValue: ,                             Description: Template to be used for rendering the alternate items in the widget.</designerProperty>
    <designerProperty>Key: EditTemplate, DisplayName: EditTemplate, FieldType: String, DefaultValue: ,                             Description: Specifies the template for widget items during edit mode.</designerProperty>
    <designerProperty>Key: Selectable,   DisplayName: Selectable,   FieldType: String, DefaultValue: no, List: no|Single|Multiple, Description: Indicates whether selection is enabled/disabled.</designerProperty>
    <designerProperty>Key: Classes,      DisplayName: Classes,      FieldType: String, DefaultValue: ,                             Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,        DisplayName: Style,        FieldType: String, DefaultValue: ,                             Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getAltTemplate" HideFromIDE="true">_getalttemplate</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDataSource" HideFromIDE="true">_getdatasource</name>
      <returntype>b4j.example.bananokendodatasource</returntype>
    </method>
    <method>
      <name DesignerName="getEditTemplate" HideFromIDE="true">_getedittemplate</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getSelectable" HideFromIDE="true">_getselectable</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getTemplate" HideFromIDE="true">_gettemplate</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Refresh">_refresh</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setAltTemplate" HideFromIDE="true">_setalttemplate</name>
      <returntype>String</returntype>
      <parameter>
        <name>AltTemplate</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataSource" HideFromIDE="true">_setdatasource</name>
      <returntype>String</returntype>
      <parameter>
        <name>DataSource</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEditTemplate" HideFromIDE="true">_setedittemplate</name>
      <returntype>String</returntype>
      <parameter>
        <name>EditTemplate</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSelectable" HideFromIDE="true">_setselectable</name>
      <comment>
Indicates whether selection is enabled/disabled. Possible values: Single or Multiple. Every other value disables the selection
https://docs.telerik.com/kendo-ui/api/javascript/ui/listview/configuration/selectable
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Selectable</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTemplate" HideFromIDE="true">_settemplate</name>
      <returntype>String</returntype>
      <parameter>
        <name>Template</name>
        <type>String</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="AltTemplate">_alttemplate</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataSource">_datasource</name>
      <returntype>b4j.example.bananokendodatasource</returntype>
      <parameter>
        <name>Value</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="EditTemplate">_edittemplate</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Selectable">_selectable</name>
      <comment>
Indicates whether selection is enabled/disabled. Possible values: Single or Multiple. Every other value disables the selection
https://docs.telerik.com/kendo-ui/api/javascript/ui/listview/configuration/selectable
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Template">_template</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendowindow</name>
    <shortname>BANanoKendoWindow</shortname>
    <event>Activate(Event As Map)</event>
    <event>Close(Event As Map)</event>
    <event>Deactivate(Event As Map)</event>
    <event>Dragend(Event As Map)</event>
    <event>Dragstart(Event As Map)</event>
    <event>Error(Event As Map)</event>
    <event>Maximize(Event As Map)</event>
    <event>Minimize(Event As Map)</event>
    <event>Open(Event As Map)</event>
    <event>Refresh(Event As Map)</event>
    <event>Resize(Event As Map)</event>
    <designerProperty>Key: Title,          DisplayName: Title,          FieldType: String,  DefaultValue: ,      Description: Title of the window</designerProperty>
    <designerProperty>Key: ShowTitle,      DisplayName: ShowTitle,      FieldType: Boolean, DefaultValue: True,  Description: Show/Hide the window title</designerProperty>
    <designerProperty>Key: Top,            DisplayName: Top,            FieldType: String,  DefaultValue: ,      Description: Top position of the window</designerProperty>
    <designerProperty>Key: Left,           DisplayName: Left,           FieldType: String,  DefaultValue: ,      Description: Left position of the window</designerProperty>
    <designerProperty>Key: Width,          DisplayName: Width,          FieldType: String,  DefaultValue: 600px, Description: Width of the window (eg. 300px or 50%)</designerProperty>
    <designerProperty>Key: MinWidth,       DisplayName: MinWidth,       FieldType: String,  DefaultValue: ,      Description: MinWidth of the window (eg. 100px or 50%)</designerProperty>
    <designerProperty>Key: MaxWidth,       DisplayName: MaxWidth,       FieldType: String,  DefaultValue: ,      Description: MinWidth of the window (eg. 500px or 50%)</designerProperty>
    <designerProperty>Key: Height,         DisplayName: Height,         FieldType: String,  DefaultValue: 400px, Description: Height of the window (eg. 200px or 50%)</designerProperty>
    <designerProperty>Key: MinHeight,      DisplayName: MinHeight,      FieldType: String,  DefaultValue: ,      Description: MinHeight of the window (eg. 100px or 50%)</designerProperty>
    <designerProperty>Key: MaxHeight,      DisplayName: MaxHeight,      FieldType: String,  DefaultValue: ,      Description: MaxHeight of the window (eg. 500px or 50%)</designerProperty>
    <designerProperty>Key: Modal,          DisplayName: Modal,          FieldType: Boolean, DefaultValue: False, Description: Specifies whether the window should show a modal overlay over the page.</designerProperty>
    <designerProperty>Key: Visible,        DisplayName: Visible,        FieldType: Boolean, DefaultValue: True,  Description: Specifies whether the window will be initially visible.</designerProperty>
    <designerProperty>Key: Draggable,      DisplayName: Draggable,      FieldType: Boolean, DefaultValue: True,  Description: Enables (true) or disables (false) the ability for users to move/drag the widget.</designerProperty>
    <designerProperty>Key: AutoFocus,      DisplayName: AutoFocus,      FieldType: Boolean, DefaultValue: True,  Description: Determines whether the Window will be focused automatically when opened. The property also influences the focus behavior when the Window is clicked when already opened.</designerProperty>
    <designerProperty>Key: ActionClose,    DisplayName: Closable,       FieldType: Boolean, DefaultValue: True,  Description: Determines whether the close button appears in the window title</designerProperty>
    <designerProperty>Key: Resizable,      DisplayName: Resizable,      FieldType: Boolean, DefaultValue: True,  Description: Determines whether the resize button appears in the window title</designerProperty>
    <designerProperty>Key: ActionMinimize, DisplayName: Minimizable,    FieldType: Boolean, DefaultValue: False, Description: Determines whether the minimize button appears in the window title</designerProperty>
    <designerProperty>Key: ActionMaximize, DisplayName: Maximizable,    FieldType: Boolean, DefaultValue: False, Description: Determines whether the maximize button appears in the window title</designerProperty>
    <designerProperty>Key: ActionRefresh,  DisplayName: Refreshable,    FieldType: Boolean, DefaultValue: False, Description: Determines whether the refresh button appears in the window title</designerProperty>
    <designerProperty>Key: ActionPin,      DisplayName: Pinable,        FieldType: Boolean, DefaultValue: False, Description: Determines whether the pin button appears in the window title</designerProperty>
    <designerProperty>Key: ActionCustom,   DisplayName: Custom actions, FieldType: String,  DefaultValue: ,      Description: Custom actions separated by pipe (e.g. clock|foo)</designerProperty>
    <designerProperty>Key: Classes,        DisplayName: Classes,        FieldType: String,  DefaultValue: ,      Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,          DisplayName: Style,          FieldType: String,  DefaultValue: ,      Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Center">_center</name>
      <comment>Centers the window within the viewport.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Close">_close</name>
      <comment>Closes the Window.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getContent" HideFromIDE="true">_getcontent</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDraggable" HideFromIDE="true">_getdraggable</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getHeight" HideFromIDE="true">_getheight</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getLeft" HideFromIDE="true">_getleft</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getMaxHeight" HideFromIDE="true">_getmaxheight</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getMaxWidth" HideFromIDE="true">_getmaxwidth</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getMinHeight" HideFromIDE="true">_getminheight</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getMinWidth" HideFromIDE="true">_getminwidth</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getOuterHeight" HideFromIDE="true">_getouterheight</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getOuterWidth" HideFromIDE="true">_getouterwidth</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getShowTitle" HideFromIDE="true">_getshowtitle</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getTitle" HideFromIDE="true">_gettitle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getTop" HideFromIDE="true">_gettop</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getWidth" HideFromIDE="true">_getwidth</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize2">_initialize2</name>
      <returntype>String</returntype>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="IsMaximized">_ismaximized</name>
      <comment>Indicates whether the window is maximized.
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="IsMinimized">_isminimized</name>
      <comment>Indicates whether the window is minimized.
</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Maximize">_maximize</name>
      <comment>Maximizes the Window to its title bar.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Minimize">_minimize</name>
      <comment>Minimizes the Window to its title bar.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Open">_open</name>
      <comment>Opens a Window and brings it on top of any other open Window instances by calling ToFront internally.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Pin">_pin</name>
      <comment>Pins the Window at its current position with a position:fixed style,
i.e. the widget stops moving together with the other page content
when the page is scrolled.
The user will still be able to move the Window with the mouse or keyboard.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Refresh">_refresh</name>
      <comment> refresh
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Restore">_restore</name>
      <comment>Restores a maximized or minimized Window to its previous state. Triggers the resize event.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setContent" HideFromIDE="true">_setcontent</name>
      <comment>Gets or sets the content of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>NewContent</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDraggable" HideFromIDE="true">_setdraggable</name>
      <comment>Enables (true) or disables (false) the ability for users to move/drag the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Draggable</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setHeight" HideFromIDE="true">_setheight</name>
      <comment>Gets or sets the height of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Height</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setLeft" HideFromIDE="true">_setleft</name>
      <comment>
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Left</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMaxHeight" HideFromIDE="true">_setmaxheight</name>
      <comment>Gets or sets the max. height of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MaxHeight</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMaxWidth" HideFromIDE="true">_setmaxwidth</name>
      <comment>Gets or sets the max. width of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MaxWidth</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMinHeight" HideFromIDE="true">_setminheight</name>
      <comment>Gets or sets the min. height of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MinHeight</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMinWidth" HideFromIDE="true">_setminwidth</name>
      <comment>Gets or sets the min. width of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MinWidth</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setShowTitle" HideFromIDE="true">_setshowtitle</name>
      <comment>Show/Hide the window title bar
If false, the window will be displayed without a title bar.
Note that the window titlebar buttons will not be shown and
this will prevent the window from being dragged unless
dragHandle is configured.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ShowTitle</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <comment>Gets or sets the CSS-Style of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTitle" HideFromIDE="true">_settitle</name>
      <comment>The text in the window title bar.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Title</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTop" HideFromIDE="true">_settop</name>
      <comment>
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Top</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setWidth" HideFromIDE="true">_setwidth</name>
      <comment>Gets or sets the width of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Width</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ToFront">_tofront</name>
      <comment>Increases the z-index style of a Window wrapper to bring the instance on top of other open Windows.
This method is executed automatically when the open method is used.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ToggleMaximization">_togglemaximization</name>
      <comment>Toggles the Window between a maximized and restored state. Triggers the resize event.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="UnPin">_unpin</name>
      <comment>Disables the Window's pinned state, so that the widget will move together with the other page content when the page is scrolled.
</comment>
      <returntype>String</returntype>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Content">_content</name>
      <comment>Gets or sets the content of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Draggable">_draggable</name>
      <comment>Enables (true) or disables (false) the ability for users to move/drag the widget.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Height">_height</name>
      <comment>Gets or sets the height of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Left">_left</name>
      <comment>
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MaxHeight">_maxheight</name>
      <comment>Gets or sets the max. height of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MaxWidth">_maxwidth</name>
      <comment>Gets or sets the max. width of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MinHeight">_minheight</name>
      <comment>Gets or sets the min. height of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MinWidth">_minwidth</name>
      <comment>Gets or sets the min. width of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="OuterHeight">_outerheight</name>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="OuterWidth">_outerwidth</name>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="ShowTitle">_showtitle</name>
      <comment>Show/Hide the window title bar
If false, the window will be displayed without a title bar.
Note that the window titlebar buttons will not be shown and
this will prevent the window from being dragged unless
dragHandle is configured.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <comment>Gets or sets the CSS-Style of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Title">_title</name>
      <comment>The text in the window title bar.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Top">_top</name>
      <comment>
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Width">_width</name>
      <comment>Gets or sets the width of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendotabstriptab</name>
    <shortname>BANanoKendoTabStripTab</shortname>
    <designerProperty>Key: Text,           DisplayName: Text,           FieldType: String,  DefaultValue: ,     Description: The text of the tab</designerProperty>
    <designerProperty>Key: Url,            DisplayName: Url,            FieldType: String,  DefaultValue: ,     Description: [ToDo]</designerProperty>
    <designerProperty>Key: Encoded,        DisplayName: Encoded,        FieldType: Boolean, DefaultValue: True, Description: [ToDo]</designerProperty>
    <designerProperty>Key: Content,        DisplayName: Content,        FieldType: String,  DefaultValue: ,     Description: [ToDo]</designerProperty>
    <designerProperty>Key: ContentUrl,     DisplayName: ContentUrl,     FieldType: String,  DefaultValue: ,     Description: [ToDo]</designerProperty>
    <designerProperty>Key: ImageUrl,       DisplayName: ImageUrl,       FieldType: String,  DefaultValue: ,     Description: [ToDo]</designerProperty>
    <designerProperty>Key: SpriteCssClass, DisplayName: SpriteCssClass, FieldType: String,  DefaultValue: ,     Description: [ToDo]</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendotoolbaritem</name>
    <shortname>BANanoKendoToolBarItem</shortname>
    <designerProperty>Key: Text,        DisplayName: Text,        FieldType: String,  DefaultValue: Button,                                                 Description: [ToDo]</designerProperty>
    <designerProperty>Key: Type,        DisplayName: Type,        FieldType: String,  DefaultValue: button, List: button|splitButton|buttonGroup|separator, Description: [ToDo]</designerProperty>
    <designerProperty>Key: Togglable,   DisplayName: Togglable,   FieldType: Boolean, DefaultValue: False,                                                  Description: [ToDo]</designerProperty>
    <designerProperty>Key: Icon,        DisplayName: Icon,        FieldType: String,  DefaultValue: ,                                                       Description: [ToDo]. See: https://docs.telerik.com/kendo-ui/styles-and-layout/icons-web</designerProperty>
    <designerProperty>Key: MenuButtons, DisplayName: MenuButtons, FieldType: String,  DefaultValue: ,                                                       Description: Subentries of the SplitButton in JSON format. Example: [ {"text": "MenuButton1", "id": "MenuButton1"} {"text": "MenuButton1", "id": "MenuButton1"} ]</designerProperty>
    <designerProperty>Key: Classes,   DisplayName: Classes,   FieldType: String,  DefaultValue: ,                                                       Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,     DisplayName: Style,     FieldType: String,  DefaultValue: ,                                                       Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getText" HideFromIDE="true">_gettext</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setText" HideFromIDE="true">_settext</name>
      <returntype>String</returntype>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Text">_text</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendocalendar</name>
    <shortname>BANanoKendoCalendar</shortname>
    <event>Change(Event As Map)</event>
    <event>Navigate(Event As Map)</event>
    <designerProperty>Key: Culture,      DisplayName: Culture,      FieldType: String,  DefaultValue: ,                                       Description: Specifies the culture info used by the widget.</designerProperty>
    <designerProperty>Key: Depth,        DisplayName: Depth,        FieldType: String,  DefaultValue: month, List: month|year|decade|century, Description: Specifies the navigation depth.</designerProperty>
    <designerProperty>Key: Footer,       DisplayName: Footer,       FieldType: String,  DefaultValue: ,                                       Description: The template which renders the footer of the calendar.</designerProperty>
    <designerProperty>Key: Format,       DisplayName: Format,       FieldType: String,  DefaultValue: ,                                       Description: Specifies the format, which is used to format the value of the DateTimePicker displayed in the input. The format also will be used to parse the input.</designerProperty>
    <designerProperty>Key: Selectable,   DisplayName: Selectable,   FieldType: String,  DefaultValue: single, List: single|multiple,          Description: By default user is able to select a single date. The property can also be set to "multiple" in order the multiple date selection to be enabled.</designerProperty>
    <designerProperty>Key: WeekNumber,   DisplayName: WeekNumber,   FieldType: Boolean, DefaultValue: False,                                  Description: If set to true a week of the year will be shown on the left side of the calendar.</designerProperty>
    <designerProperty>Key: Start,        DisplayName: Start,        FieldType: String,  DefaultValue: month, List: month|year|decade|century, Description: Specifies the start view of the calendar.</designerProperty>
    <designerProperty>Key: Visible,      DisplayName: Visible,      FieldType: Boolean, DefaultValue: True,                                   Description: Show/Hide the widget.</designerProperty>
    <designerProperty>Key: Classes,      DisplayName: Classes,      FieldType: String, DefaultValue: ,                                        Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,        DisplayName: Style,        FieldType: String, DefaultValue: ,                                        Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getCulture" HideFromIDE="true">_getculture</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDates" HideFromIDE="true">_getdates</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getDepth" HideFromIDE="true">_getdepth</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDisableDates" HideFromIDE="true">_getdisabledates</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getFooter" HideFromIDE="true">_getfooter</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getFormat" HideFromIDE="true">_getformat</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getMax" HideFromIDE="true">_getmax</name>
      <returntype>long</returntype>
    </method>
    <method>
      <name DesignerName="getMin" HideFromIDE="true">_getmin</name>
      <returntype>long</returntype>
    </method>
    <method>
      <name DesignerName="getMonth" HideFromIDE="true">_getmonth</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getParseFormats" HideFromIDE="true">_getparseformats</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getSelectable" HideFromIDE="true">_getselectable</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStart" HideFromIDE="true">_getstart</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getValue" HideFromIDE="true">_getvalue</name>
      <returntype>long</returntype>
    </method>
    <method>
      <name DesignerName="getVisible" HideFromIDE="true">_getvisible</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getWeekNumber" HideFromIDE="true">_getweeknumber</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setCulture" HideFromIDE="true">_setculture</name>
      <comment>
Specifies the culture info used by the widget.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/culture
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Culture</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDates" HideFromIDE="true">_setdates</name>
      <comment>
Specifies a list of dates which will be passed to the month template of the DateView.
All dates which match the date portion of the selected date will be used to re-bind the TimeView.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Dates</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDepth" HideFromIDE="true">_setdepth</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Depth</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDisableDates" HideFromIDE="true">_setdisabledates</name>
      <comment>
An array that will be used to determine which dates to be disabled for selection by the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DisableDates</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFooter" HideFromIDE="true">_setfooter</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Footer</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFormat" HideFromIDE="true">_setformat</name>
      <comment>
 https://docs.telerik.com/kendo-ui/framework/globalization/dateformatting
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Format</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMax" HideFromIDE="true">_setmax</name>
      <comment>
Specifies the maximum date, which the calendar can show. (default: Date(2099, 11, 31))
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MaxValue</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMin" HideFromIDE="true">_setmin</name>
      <comment>
Specifies the minimum date that the calendar can show. (default: Date(1900, 0, 1))
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MinValue</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMonth" HideFromIDE="true">_setmonth</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Month</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setParseFormats" HideFromIDE="true">_setparseformats</name>
      <comment>
Specifies the formats which are used to parse the value set with value() method or by direct input.
If not set the value of the options.format and options.timeFormat will be used.
Note that value of the format option is always used.
The timeFormat value also will be used if defined.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ParseFormats</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSelectable" HideFromIDE="true">_setselectable</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Selectable</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStart" HideFromIDE="true">_setstart</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Start</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValue" HideFromIDE="true">_setvalue</name>
      <comment>
 Gets / Sets the value of the widget
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setVisible" HideFromIDE="true">_setvisible</name>
      <comment>
 Show/Hide the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Visible</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setWeekNumber" HideFromIDE="true">_setweeknumber</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>WeekNumber</name>
        <type>boolean</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Culture">_culture</name>
      <comment>
Specifies the culture info used by the widget.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/culture
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Dates">_dates</name>
      <comment>
Specifies a list of dates which will be passed to the month template of the DateView.
All dates which match the date portion of the selected date will be used to re-bind the TimeView.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Depth">_depth</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DisableDates">_disabledates</name>
      <comment>
An array that will be used to determine which dates to be disabled for selection by the widget.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Footer">_footer</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Format">_format</name>
      <comment>
 https://docs.telerik.com/kendo-ui/framework/globalization/dateformatting
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Max">_max</name>
      <comment>
Specifies the maximum date, which the calendar can show. (default: Date(2099, 11, 31))
</comment>
      <returntype>long</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Min">_min</name>
      <comment>
Specifies the minimum date that the calendar can show. (default: Date(1900, 0, 1))
</comment>
      <returntype>long</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Month">_month</name>
      <comment>

</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="ParseFormats">_parseformats</name>
      <comment>
Specifies the formats which are used to parse the value set with value() method or by direct input.
If not set the value of the options.format and options.timeFormat will be used.
Note that value of the format option is always used.
The timeFormat value also will be used if defined.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Selectable">_selectable</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Start">_start</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Value">_value</name>
      <comment>
 Gets / Sets the value of the widget
</comment>
      <returntype>long</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Visible">_visible</name>
      <comment>
 Show/Hide the widget.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="WeekNumber">_weeknumber</name>
      <comment>

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendodatetimepicker</name>
    <shortname>BANanoKendoDateTimePicker</shortname>
    <event>Change(Event As Map)</event>
    <event>Close(Event As Map)</event>
    <event>Open(Event As Map)</event>
    <designerProperty>Key: ARIATemplate, DisplayName: ARIATemplate, FieldType: String,  DefaultValue: ,                                       Description: Specifies a template used to populate value of the aria-label attribute.</designerProperty>
    <designerProperty>Key: Culture,      DisplayName: Culture,      FieldType: String,  DefaultValue: ,                                       Description: Specifies the culture info used by the widget.</designerProperty>
    <designerProperty>Key: DateInput,    DisplayName: DateInput,    FieldType: Boolean, DefaultValue: False,                                  Description: Specifies if the DatePicker will use DateInput for editing value</designerProperty>
    <designerProperty>Key: Depth,        DisplayName: Depth,        FieldType: String,  DefaultValue: month, List: month|year|decade|century, Description: Specifies the navigation depth.</designerProperty>
    <designerProperty>Key: Footer,       DisplayName: Footer,       FieldType: String,  DefaultValue: ,                                       Description: The template which renders the footer of the calendar.</designerProperty>
    <designerProperty>Key: Format,       DisplayName: Format,       FieldType: String,  DefaultValue: ,                                       Description: Specifies the format, which is used to format the value of the DateTimePicker displayed in the input. The format also will be used to parse the input.</designerProperty>
    <designerProperty>Key: Interval,     DisplayName: Interval,     FieldType: Int,     DefaultValue: 30,                                     Description: Specifies the interval between values in the popup list in minutes.</designerProperty>
    <designerProperty>Key: WeekNumber,   DisplayName: WeekNumber,   FieldType: Boolean, DefaultValue: False,                                  Description: If set to true a week of the year will be shown on the left side of the calendar.</designerProperty>
    <designerProperty>Key: Start,        DisplayName: Start,        FieldType: String,  DefaultValue: month, List: month|year|decade|century, Description: Specifies the start view of the calendar.</designerProperty>
    <designerProperty>Key: TimeFormat,   DisplayName: TimeFormat,   FieldType: String,  DefaultValue: ,                                       Description: Specifies the format which is used to format the values in the time drop-down list.</designerProperty>
    <designerProperty>Key: Enabled,      DisplayName: Enabled,      FieldType: Boolean, DefaultValue: True,                                   Description: Enable/Disable the widget.</designerProperty>
    <designerProperty>Key: Visible,      DisplayName: Visible,      FieldType: Boolean, DefaultValue: True,                                   Description: Show/Hide the widget.</designerProperty>
    <designerProperty>Key: Classes,      DisplayName: Classes,      FieldType: String,  DefaultValue: ,                                       Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,        DisplayName: Style,        FieldType: String,  DefaultValue: ,                                       Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getAnimation" HideFromIDE="true">_getanimation</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getARIATemplate" HideFromIDE="true">_getariatemplate</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getCulture" HideFromIDE="true">_getculture</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDateInput" HideFromIDE="true">_getdateinput</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getDates" HideFromIDE="true">_getdates</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getDepth" HideFromIDE="true">_getdepth</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDisableDates" HideFromIDE="true">_getdisabledates</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getEnabled" HideFromIDE="true">_getenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getFooter" HideFromIDE="true">_getfooter</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getFormat" HideFromIDE="true">_getformat</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getInterval" HideFromIDE="true">_getinterval</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getMax" HideFromIDE="true">_getmax</name>
      <returntype>long</returntype>
    </method>
    <method>
      <name DesignerName="getMin" HideFromIDE="true">_getmin</name>
      <returntype>long</returntype>
    </method>
    <method>
      <name DesignerName="getMonth" HideFromIDE="true">_getmonth</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getParseFormats" HideFromIDE="true">_getparseformats</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getStart" HideFromIDE="true">_getstart</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getTimeFormat" HideFromIDE="true">_gettimeformat</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getValue" HideFromIDE="true">_getvalue</name>
      <returntype>long</returntype>
    </method>
    <method>
      <name DesignerName="getVisible" HideFromIDE="true">_getvisible</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getWeekNumber" HideFromIDE="true">_getweeknumber</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setAnimation" HideFromIDE="true">_setanimation</name>
      <comment>
Configures the opening and closing animations of the popups.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/animation
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Animation</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setARIATemplate" HideFromIDE="true">_setariatemplate</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ARIATemplate</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setCulture" HideFromIDE="true">_setculture</name>
      <comment>
Specifies the culture info used by the widget.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/culture
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Culture</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDateInput" HideFromIDE="true">_setdateinput</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DateInput</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDates" HideFromIDE="true">_setdates</name>
      <comment>
Specifies a list of dates which will be passed to the month template of the DateView.
All dates which match the date portion of the selected date will be used to re-bind the TimeView.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Dates</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDepth" HideFromIDE="true">_setdepth</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Depth</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDisableDates" HideFromIDE="true">_setdisabledates</name>
      <comment>
An array that will be used to determine which dates to be disabled for selection by the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DisableDates</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEnabled" HideFromIDE="true">_setenabled</name>
      <comment>
 Enable/Disable the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Enabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFooter" HideFromIDE="true">_setfooter</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Footer</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFormat" HideFromIDE="true">_setformat</name>
      <comment>
 https://docs.telerik.com/kendo-ui/framework/globalization/dateformatting
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Format</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setInterval" HideFromIDE="true">_setinterval</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Interval</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMax" HideFromIDE="true">_setmax</name>
      <comment>
Specifies the maximum date, which the calendar can show. (default: Date(2099, 11, 31))
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MaxValue</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMin" HideFromIDE="true">_setmin</name>
      <comment>
Specifies the minimum date that the calendar can show. (default: Date(1900, 0, 1))
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MinValue</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMonth" HideFromIDE="true">_setmonth</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Month</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setParseFormats" HideFromIDE="true">_setparseformats</name>
      <comment>
Specifies the formats which are used to parse the value set with value() method or by direct input.
If not set the value of the options.format and options.timeFormat will be used.
Note that value of the format option is always used.
The timeFormat value also will be used if defined.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ParseFormats</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStart" HideFromIDE="true">_setstart</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Start</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTimeFormat" HideFromIDE="true">_settimeformat</name>
      <comment>
 https://docs.telerik.com/kendo-ui/framework/globalization/dateformatting
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>TimeFormat</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValue" HideFromIDE="true">_setvalue</name>
      <comment>
 Gets / Sets the value of the widget
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setVisible" HideFromIDE="true">_setvisible</name>
      <comment>
 Show/Hide the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Visible</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setWeekNumber" HideFromIDE="true">_setweeknumber</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>WeekNumber</name>
        <type>boolean</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Animation">_animation</name>
      <comment>
Configures the opening and closing animations of the popups.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/animation
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="ARIATemplate">_ariatemplate</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Classes">_classes</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Culture">_culture</name>
      <comment>
Specifies the culture info used by the widget.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/culture
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DateInput">_dateinput</name>
      <comment>

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Dates">_dates</name>
      <comment>
Specifies a list of dates which will be passed to the month template of the DateView.
All dates which match the date portion of the selected date will be used to re-bind the TimeView.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Depth">_depth</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DisableDates">_disabledates</name>
      <comment>
An array that will be used to determine which dates to be disabled for selection by the widget.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Enabled">_enabled</name>
      <comment>
 Enable/Disable the widget.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Footer">_footer</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Format">_format</name>
      <comment>
 https://docs.telerik.com/kendo-ui/framework/globalization/dateformatting
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Interval">_interval</name>
      <comment>

</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Max">_max</name>
      <comment>
Specifies the maximum date, which the calendar can show. (default: Date(2099, 11, 31))
</comment>
      <returntype>long</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Min">_min</name>
      <comment>
Specifies the minimum date that the calendar can show. (default: Date(1900, 0, 1))
</comment>
      <returntype>long</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Month">_month</name>
      <comment>

</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="ParseFormats">_parseformats</name>
      <comment>
Specifies the formats which are used to parse the value set with value() method or by direct input.
If not set the value of the options.format and options.timeFormat will be used.
Note that value of the format option is always used.
The timeFormat value also will be used if defined.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Start">_start</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="TimeFormat">_timeformat</name>
      <comment>
 https://docs.telerik.com/kendo-ui/framework/globalization/dateformatting
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Value">_value</name>
      <comment>
 Gets / Sets the value of the widget
</comment>
      <returntype>long</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Visible">_visible</name>
      <comment>
 Show/Hide the widget.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="WeekNumber">_weeknumber</name>
      <comment>

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendobutton</name>
    <shortname>BANanoKendoButton</shortname>
    <event>Click(Event As Map)</event>
    <designerProperty>Key: Text,    DisplayName: Text,    FieldType: String,  DefaultValue: Button, Description: The text of the widget.</designerProperty>
    <designerProperty>Key: Tooltip, DisplayName: Tooltip, FieldType: String,  DefaultValue: ,       Description: The tooltip of the widget.</designerProperty>
    <designerProperty>Key: Icon,    DisplayName: Icon,    FieldType: String,  DefaultValue: ,       Description: The icon of the widget.</designerProperty>
    <designerProperty>Key: Enabled, DisplayName: Enabled, FieldType: Boolean, DefaultValue: True,   Description: Enable/Disable the widget.</designerProperty>
    <designerProperty>Key: Visible, DisplayName: Visible, FieldType: Boolean, DefaultValue: True,   Description: Show/Hide the widget.</designerProperty>
    <designerProperty>Key: Classes, DisplayName: Classes, FieldType: String,  DefaultValue: ,       Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,   DisplayName: Style,   FieldType: String,  DefaultValue: ,       Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getEnabled" HideFromIDE="true">_getenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getText" HideFromIDE="true">_gettext</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getVisible" HideFromIDE="true">_getvisible</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <comment>Gets or sets the Classes of the widget
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEnabled" HideFromIDE="true">_setenabled</name>
      <comment>
 Enable/Disable the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Enabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <comment>Gets or sets the CSS-Style of the widget
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setText" HideFromIDE="true">_settext</name>
      <comment>
 Gets / Sets the widget text
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setVisible" HideFromIDE="true">_setvisible</name>
      <comment>
 Show/Hide the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Visible</name>
        <type>boolean</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <comment>Gets or sets the Classes of the widget
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Enabled">_enabled</name>
      <comment>
 Enable/Disable the widget.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <comment>Gets or sets the CSS-Style of the widget
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Text">_text</name>
      <comment>
 Gets / Sets the widget text
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Visible">_visible</name>
      <comment>
 Show/Hide the widget.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendopager</name>
    <shortname>BANanoKendoPager</shortname>
    <event>Change(Event As Map)</event>
    <designerProperty>Key: AutoBind,        DisplayName: AutoBind,       FieldType: Boolean, DefaultValue: True,  Description: Controls whether to bind the widget to the data source on initialization.</designerProperty>
    <designerProperty>Key: SelectTemplate,  DisplayName: SelectTemplate, FieldType: String, DefaultValue: ,       Description: The template for selected page number link.</designerProperty>
    <designerProperty>Key: LinkTemplate,    DisplayName: LinkTemplate,   FieldType: String, DefaultValue: ,       Description: The template for page number links.</designerProperty>
    <designerProperty>Key: Classes,         DisplayName: Classes,        FieldType: String,  DefaultValue: ,      Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,           DisplayName: Style,          FieldType: String,  DefaultValue: ,      Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDataSource" HideFromIDE="true">_getdatasource</name>
      <returntype>Object</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataSource" HideFromIDE="true">_setdatasource</name>
      <returntype>String</returntype>
      <parameter>
        <name>DataSource</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataSource">_datasource</name>
      <returntype>Object</returntype>
      <parameter>
        <name>Value</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendopanelbar</name>
    <shortname>BANanoKendoPanelBar</shortname>
    <event>Activate(Event As Map)</event>
    <event>Collapse(Event As Map)</event>
    <event>ContentLoad(Event As Map)</event>
    <event>DataBound(Event As Map)</event>
    <event>Error(Event As Map)</event>
    <event>Expand(Event As Map)</event>
    <event>Select(Event As Map)</event>
    <designerProperty>Key: AutoBind,   DisplayName: AutoBind,   FieldType: Boolean, DefaultValue: True,     Description: If set to false the widget will not bind to the data source during initialization. In this case data binding will occur when the change event of the data source is fired.</designerProperty>
    <designerProperty>Key: ExpandMode, DisplayName: ExpandMode, FieldType: String,  DefaultValue: multiple, Description: Specifies how the PanelBar items are displayed when opened and closed., List: multiple|single</designerProperty>
    <designerProperty>Key: Template,   DisplayName: Template,   FieldType: String,  DefaultValue: ,         Description: Template for rendering each node.</designerProperty>
    <designerProperty>Key: Classes,      DisplayName: Classes,       FieldType: String,  DefaultValue: , Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,        DisplayName: Style,         FieldType: String,  DefaultValue: , Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AppendPanel">_appendpanel</name>
      <comment>
Appends an item to the PanelBar.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Panel</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AppendPanels">_appendpanels</name>
      <comment>
Appends items to the PanelBar.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Panels</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ClearSelection">_clearselection</name>
      <comment>
Clears the currently selected PanelBar items.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Collapse">_collapse</name>
      <comment>
Collapses the specified item(s) of a PanelBar.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the PanelBar for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Enable">_enable</name>
      <comment>
Enables (true) or disables (false) the specified item(s) of the PanelBar.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Expand">_expand</name>
      <comment>
Expands the specified item(s) of a PanelBar.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getAnimation" HideFromIDE="true">_getanimation</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDataSource" HideFromIDE="true">_getdatasource</name>
      <returntype>Object</returntype>
    </method>
    <method>
      <name DesignerName="getMessages" HideFromIDE="true">_getmessages</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="InsertAfter">_insertafter</name>
      <comment>
Inserts a PanelBar item after the specified referenceItem
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="InsertBefore">_insertbefore</name>
      <comment>
Inserts a PanelBar item before the specified referenceItem
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Reload">_reload</name>
      <comment>
Reloads the content of a PanelBar from an AJAX request.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="RemovePanel">_removepanel</name>
      <comment>
Removes the specified PanelBar item(s).
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="SelectPanel">_selectpanel</name>
      <comment>
Gets or sets the selected item.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setAnimation" HideFromIDE="true">_setanimation</name>
      <comment>
A collection of visual animations used when PanelBar items are expand or collapsed through user interactions. Setting this option to false will disable all animations.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Animation</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataSource" HideFromIDE="true">_setdatasource</name>
      <comment>
https://docs.telerik.com/kendo-ui/api/javascript/ui/panelbar/configuration/datasource
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DataSource</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMessages" HideFromIDE="true">_setmessages</name>
      <comment>
The text messages displayed in the widget. Use it to customize or localize the messages.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Messages</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Animation">_animation</name>
      <comment>
A collection of visual animations used when PanelBar items are expand or collapsed through user interactions. Setting this option to false will disable all animations.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataSource">_datasource</name>
      <comment>
https://docs.telerik.com/kendo-ui/api/javascript/ui/panelbar/configuration/datasource
</comment>
      <returntype>Object</returntype>
      <parameter>
        <name>Value</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Messages">_messages</name>
      <comment>
The text messages displayed in the widget. Use it to customize or localize the messages.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendocombobox</name>
    <shortname>BANanoKendoComboBox</shortname>
    <event>Change(Event As Map)</event>
    <event>Close(Event As Map)</event>
    <event>DataBound(Event As Map)</event>
    <event>Filtering(Event As Map)</event>
    <event>Open(Event As Map)</event>
    <event>Select(Event As Map)</event>
    <event>Cascade(Event As Map)</event>
    <designerProperty>Key: DataTextField,       DisplayName: DataTextField,       FieldType: String, DefaultValue: , Description: The field of the data item that provides the text content of the list items. The widget will filter the data source based on this field.</designerProperty>
    <designerProperty>Key: DataValueField,      DisplayName: DataValueField,      FieldType: String, DefaultValue: , Description: The field of the data item that provides the value of the widget.</designerProperty>
    <designerProperty>Key: Filter,              DisplayName: Filter,              FieldType: String,  DefaultValue: none, List: none|startswith|endswith|contains, Description: The filtering method used to determine the suggestions for the current value.</designerProperty>
    <designerProperty>Key: Delay,               DisplayName: Delay,               FieldType: Int,     DefaultValue: 500,   Description: Specifies the delay in milliseconds before the search-text typed by the end user is sent for filtering.</designerProperty>
    <designerProperty>Key: AutoWidth,           DisplayName: AutoWidth,           FieldType: Boolean, DefaultValue: False, Description: If set to true the widget automatically adjusts the width of the popup element and does not wrap up the item label.</designerProperty>
    <designerProperty>Key: AutoBind,            DisplayName: AutoBind,            FieldType: Boolean, DefaultValue: True,  Description: Controls whether to bind the widget to the data source on initialization.</designerProperty>
    <designerProperty>Key: IgnoreCase,          DisplayName: IgnoreCase,          FieldType: Boolean, DefaultValue: True,  Description: If set to false case-sensitive search will be performed to find suggestions. The widget performs case-insensitive searching by default.</designerProperty>
    <designerProperty>Key: Suggest,             DisplayName: Suggest,             FieldType: Boolean, DefaultValue: False, Description: If set to true the widget will automatically use the first suggestion as its value.</designerProperty>
    <designerProperty>Key: Placeholder,         DisplayName: Placeholder,         FieldType: String,  DefaultValue: , Description: The hint displayed by the widget when it is empty. Not set by default.</designerProperty>
    <designerProperty>Key: FixedGroupTemplate,  DisplayName: FixedGroupTemplate,  FieldType: String, DefaultValue: , Description: The template used to render the fixed header group. By default the widget displays only the value of the current group.</designerProperty>
    <designerProperty>Key: FooterTemplate,      DisplayName: FooterTemplate,      FieldType: String, DefaultValue: , Description: The template used to render the footer template.</designerProperty>
    <designerProperty>Key: GroupTemplate,       DisplayName: GroupTemplate,       FieldType: String, DefaultValue: , Description: The template used to render the groups. By default the widget displays only the value of the group.</designerProperty>
    <designerProperty>Key: NoDataTemplate,      DisplayName: NoDataTemplate,      FieldType: String, DefaultValue: , Description: The template used to render the "no data" template, which will be displayed if no results are found or the underlying data source is empty.</designerProperty>
    <designerProperty>Key: HeaderTemplate,      DisplayName: HeaderTemplate,      FieldType: String, DefaultValue: , Description: Specifies a static HTML content, which will be rendered as a header of the popup element.</designerProperty>
    <designerProperty>Key: Template,            DisplayName: Template,            FieldType: String, DefaultValue: , Description: The template used to render the items. By default the widget displays only the text of the data item (configured via dataTextField).</designerProperty>
    <designerProperty>Key: Classes,             DisplayName: Classes,             FieldType: String,  DefaultValue: , Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,               DisplayName: Style,               FieldType: String,  DefaultValue: , Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getAnimation" HideFromIDE="true">_getanimation</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDataSource" HideFromIDE="true">_getdatasource</name>
      <returntype>Object</returntype>
    </method>
    <method>
      <name DesignerName="getDataTextField" HideFromIDE="true">_getdatatextfield</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDataValueField" HideFromIDE="true">_getdatavaluefield</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setAnimation" HideFromIDE="true">_setanimation</name>
      <comment>
Configures the opening and closing animations of the suggestion popup.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Animation</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataSource" HideFromIDE="true">_setdatasource</name>
      <comment>
The data source of the widget which is used to display a list of values.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DataSource</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataTextField" HideFromIDE="true">_setdatatextfield</name>
      <comment>
The field of the data item that provides the text content of the list items. The widget will filter the data source based on this field.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DataTextField</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataValueField" HideFromIDE="true">_setdatavaluefield</name>
      <comment>
The field of the data item that provides the value of the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DataValueField</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Animation">_animation</name>
      <comment>
Configures the opening and closing animations of the suggestion popup.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataSource">_datasource</name>
      <comment>
The data source of the widget which is used to display a list of values.
</comment>
      <returntype>Object</returntype>
      <parameter>
        <name>Value</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataTextField">_datatextfield</name>
      <comment>
The field of the data item that provides the text content of the list items. The widget will filter the data source based on this field.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataValueField">_datavaluefield</name>
      <comment>
The field of the data item that provides the value of the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendodatasource</name>
    <shortname>BANanoKendoDataSource</shortname>
    <event>Change(Event As Map)</event>
    <event>Error(Event As Map)</event>
    <event>Push(Event As Map)</event>
    <event>RequestEnd(Event As Map)</event>
    <event>RequestStart(Event As Map)</event>
    <event>Sync(Event As Map)</event>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Add">_add</name>
      <comment>Appends a data item to the data source.

Example:

&lt;code&gt;
 myDataSource.Add(CreateMap("name": "Jane Doe", "age": "30"))
 myDataSource.Add(CreateMap("name": "John Doe", "age": "33"))
&lt;/code&gt;
&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/add&lt;/link&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Item</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Aggregates">_aggregates</name>
      <comment>Returns the aggregate results.

Example:

&lt;code&gt;
 Dim ageAggregate As Map = myDataSource.Aggregates("age")
 Log(ageAggregate.Get("sum"))
 Log(ageAggregate.Get("min"))
 Log(ageAggregate.Get("max"))
&lt;/code&gt;
&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/aggregate#aggregates&lt;/link&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Fieldname</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="At">_at</name>
      <comment>Returns the data item at the specified index. The index is zero-based.
&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/at&lt;/link&gt;
</comment>
      <returntype>Object</returntype>
      <parameter>
        <name>Index</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getAggregate" HideFromIDE="true">_getaggregate</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="GetByUID">_getbyuid</name>
      <comment>Gets the data item (model) with the specified uid.
&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/getbyuid&lt;/link&gt;
</comment>
      <returntype>Object</returntype>
      <parameter>
        <name>UID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getData" HideFromIDE="true">_getdata</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getFilter" HideFromIDE="true">_getfilter</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getGroup" HideFromIDE="true">_getgroup</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getPage" HideFromIDE="true">_getpage</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getPageSize" HideFromIDE="true">_getpagesize</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getSort" HideFromIDE="true">_getsort</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getTransport" HideFromIDE="true">_gettransport</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>Callback</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Read">_read</name>
      <comment>Reads data items from a remote/custom transport (if the transport option is set) or from a JavaScript array (if the data option is set).

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/read&lt;/link&gt;
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <comment>Removes the specified data item from the data source.

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/remove&lt;/link&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DataItem</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setAggregate" HideFromIDE="true">_setaggregate</name>
      <comment>Gets or sets the aggregate configuration.

Example:

&lt;code&gt;
 Dim myAggregateList As List
 myAggregateList.Initialize

 myAggregateList.Add(CreateMap("field": "age", "aggregate": "sum"))
 myAggregateList.Add(CreateMap("field": "age", "aggregate": "min"))
 myAggregateList.Add(CreateMap("field": "age", "aggregate": "max"))

 myDataSource.Aggregate = myAggregateList
&lt;/code&gt;
&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/aggregate&lt;/link&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Aggregate</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setData" HideFromIDE="true">_setdata</name>
      <comment>Gets or sets the data items of the data source.

Example:

&lt;code&gt;
 Dim myDataList As List
 myDataList.Initialize
 myDataList.Add(CreateMap("name": "Jane Doe", "age": 30))
 myDataList.Add(CreateMap("name": "John Doe", "age": 33))
 myDataSource.Data = myDataList
&lt;/code&gt;

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/data&lt;/link&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Data</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFilter" HideFromIDE="true">_setfilter</name>
      <comment>Gets or sets the filter configuration.

Example:

&lt;code&gt;
 Dim FilterMap As Map = CreateMap("field":"name", "operator":"startsWith", "value":"Jane")
 myDataSource.Filter = FilterMap
 Dim View As List = myDataSource.View
 For Counter = 0 To View.Size - 1
   Log(View.Get(Counter))
 Next
&lt;/code&gt;

The supported values for 'operator' are:
 "eq" (equal to)
 "neq" (not equal to)
 "isnull" (is equal to null)
 "isnotnull" (is not equal to null)
 "lt" (less than)
 "lte" (less than or equal to)
 "gt" (greater than)
 "gte" (greater than or equal to)
 "startswith"
 "doesnotstartwith"
 "endswith"
 "doesnotendwith"
 "contains"
 "doesnotcontain"
 "isempty"
 "isnotempty"

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/filter#filter&lt;/link&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Filter</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setGroup" HideFromIDE="true">_setgroup</name>
      <comment>Gets or sets the grouping configuration.

Example:

&lt;code&gt;
 myDataSource.Add(CreateMap("text":"Tea", "category":"Beverages"))
 myDataSource.Add(CreateMap("text":"Coffee", "category":"Beverages"))
 myDataSource.Add(CreateMap("text":"Ham", "category":"Food"))
 myDataSource.Group = CreateMap("field":"category")
&lt;/code&gt;

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/group#group&lt;/link&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Group</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setPage" HideFromIDE="true">_setpage</name>
      <comment>
The page of data which the data source will return when the view method is invoked or request from the remote service.

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/configuration/page&lt;/link&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Page</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setPageSize" HideFromIDE="true">_setpagesize</name>
      <comment>
The number of data items per page. The property has no default value. Therefore, to use paging, make sure some pageSize value is set.

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/configuration/pagesize&lt;/link&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>PageSize</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSort" HideFromIDE="true">_setsort</name>
      <comment>Example:

&lt;code&gt;
 Dim SortMap As Map = CreateMap("field":"age", "dir":"desc")
 myDataSource.Sort = SortMap
&lt;/code&gt;

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/sort&lt;/link&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Sort</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTransport" HideFromIDE="true">_settransport</name>
      <comment>
The configuration used to load and save the data items.
A data source is remote or local based on the way it retrieves data items.
Remote data sources load and save data items from and to a remote end-point (also known as remote service or server).
The transport option describes the remote service configuration - URL, HTTP verb, HTTP headers, and others.
The transport option can also be used to implement custom data loading and saving.
Local data sources are bound to a JavaScript array via the data option.

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/configuration/transport/link&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Transport</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Sync">_sync</name>
      <comment>Saves any data item changes.

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/sync&lt;/link&gt;
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="View">_view</name>
      <comment>Returns the data items which correspond to the current page, filter, sort, and group configuration.

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/view&lt;/link&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <property>
      <name DesignerName="Aggregate">_aggregate</name>
      <comment>Gets or sets the aggregate configuration.

Example:

&lt;code&gt;
 Dim myAggregateList As List
 myAggregateList.Initialize

 myAggregateList.Add(CreateMap("field": "age", "aggregate": "sum"))
 myAggregateList.Add(CreateMap("field": "age", "aggregate": "min"))
 myAggregateList.Add(CreateMap("field": "age", "aggregate": "max"))

 myDataSource.Aggregate = myAggregateList
&lt;/code&gt;
&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/aggregate&lt;/link&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Data">_data</name>
      <comment>Gets or sets the data items of the data source.

Example:

&lt;code&gt;
 Dim myDataList As List
 myDataList.Initialize
 myDataList.Add(CreateMap("name": "Jane Doe", "age": 30))
 myDataList.Add(CreateMap("name": "John Doe", "age": 33))
 myDataSource.Data = myDataList
&lt;/code&gt;

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/data&lt;/link&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Filter">_filter</name>
      <comment>Gets or sets the filter configuration.

Example:

&lt;code&gt;
 Dim FilterMap As Map = CreateMap("field":"name", "operator":"startsWith", "value":"Jane")
 myDataSource.Filter = FilterMap
 Dim View As List = myDataSource.View
 For Counter = 0 To View.Size - 1
   Log(View.Get(Counter))
 Next
&lt;/code&gt;

The supported values for 'operator' are:
 "eq" (equal to)
 "neq" (not equal to)
 "isnull" (is equal to null)
 "isnotnull" (is not equal to null)
 "lt" (less than)
 "lte" (less than or equal to)
 "gt" (greater than)
 "gte" (greater than or equal to)
 "startswith"
 "doesnotstartwith"
 "endswith"
 "doesnotendwith"
 "contains"
 "doesnotcontain"
 "isempty"
 "isnotempty"

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/filter#filter&lt;/link&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Group">_group</name>
      <comment>Gets or sets the grouping configuration.

Example:

&lt;code&gt;
 myDataSource.Add(CreateMap("text":"Tea", "category":"Beverages"))
 myDataSource.Add(CreateMap("text":"Coffee", "category":"Beverages"))
 myDataSource.Add(CreateMap("text":"Ham", "category":"Food"))
 myDataSource.Group = CreateMap("field":"category")
&lt;/code&gt;

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/group#group&lt;/link&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Page">_page</name>
      <comment>
The page of data which the data source will return when the view method is invoked or request from the remote service.

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/configuration/page&lt;/link&gt;
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="PageSize">_pagesize</name>
      <comment>
The number of data items per page. The property has no default value. Therefore, to use paging, make sure some pageSize value is set.

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/configuration/pagesize&lt;/link&gt;
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Sort">_sort</name>
      <comment>Example:

&lt;code&gt;
 Dim SortMap As Map = CreateMap("field":"age", "dir":"desc")
 myDataSource.Sort = SortMap
&lt;/code&gt;

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/methods/sort&lt;/link&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Transport">_transport</name>
      <comment>
The configuration used to load and save the data items.
A data source is remote or local based on the way it retrieves data items.
Remote data sources load and save data items from and to a remote end-point (also known as remote service or server).
The transport option describes the remote service configuration - URL, HTTP verb, HTTP headers, and others.
The transport option can also be used to implement custom data loading and saving.
Local data sources are bound to a JavaScript array via the data option.

&lt;link&gt;Kendo UI Documentation|https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/configuration/transport/link&gt;
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendoslider</name>
    <shortname>BANanoKendoSlider</shortname>
    <event>Change(Event As Map)</event>
    <event>Slide(Event As Map)</event>
    <designerProperty>Key: IncreaseButtonTitle, DisplayName: Increase button title, FieldType: String,  DefaultValue: Increase,   Description: The title of the increase button of the Slider.</designerProperty>
    <designerProperty>Key: DecreaseButtonTitle, DisplayName: Decrease button title, FieldType: String,  DefaultValue: Decrease,   Description: The title of the decrease button of the Slider.</designerProperty>
    <designerProperty>Key: DragHandleTitle,     DisplayName: Drag handle title,     FieldType: String,  DefaultValue: Drag,       Description: The title of the drag handle of the Slider.</designerProperty>
    <designerProperty>Key: Min,                 DisplayName: Minimum value,         FieldType: Float,   DefaultValue: 0,          Description: The minimum value of the Slider.</designerProperty>
    <designerProperty>Key: Max,                 DisplayName: Maximum value,         FieldType: Float,   DefaultValue: 10,         Description: The maximum value of the Slider.</designerProperty>
    <designerProperty>Key: Orientation,         DisplayName: Orientation,           FieldType: String,  DefaultValue: horizontal, Description: The orientation of a Slider., List: horizontal|vertical</designerProperty>
    <designerProperty>Key: ShowButtons,         DisplayName: Show buttons,          FieldType: Boolean, DefaultValue: True,       Description: Can be used to show (true) or hide (false) the increase and decrease buttons of a Slider.</designerProperty>
    <designerProperty>Key: LargeStep,           DisplayName: Large step,            FieldType: Float,   DefaultValue: 5,          Description: The delta with which the value will change when the user presses the Page Up or Page Down key (the drag handle must be focused). Note: largeStep will also set a large tick for every large step. Must be a positive number, larger than smallStep.</designerProperty>
    <designerProperty>Key: SmallStep,           DisplayName: Small step,            FieldType: Float,   DefaultValue: 1,          Description: The small step value of the Slider. Must be a positive number. Otherwise an Javascript exception will be thrown. The small step value determines the amount of Slider value change when the end user clicks on the increase or decrease buttons of the Slider; presses the arrow keys (the drag handle must be focused); drags the drag handle.</designerProperty>
    <designerProperty>Key: TickPlacement,       DisplayName: Tick placement,        FieldType: String,  DefaultValue: both,       Description: Denotes the location of the tick marks in the Slider., List: topLeft|bottomRight|both|none</designerProperty>
    <designerProperty>Key: TooltipEnabled,      DisplayName: Tooltip enabled,       FieldType: Boolean, DefaultValue: True,       Description: Disables (false) or enables (true) the tooltip of the Slider.</designerProperty>
    <designerProperty>Key: TooltipFormat,       DisplayName: Tooltip format,        FieldType: String,  DefaultValue: ,           Description: Format string for the text of the tooltip. Note: The applied format will also influence the appearance of the Slider tick labels. The slider widget supports precision of up-to 10 digits after the decimals point.</designerProperty>
    <designerProperty>Key: TooltipTemplate,     DisplayName: Tooltip template,      FieldType: String,  DefaultValue: ,           Description: Template of the tooltip. The following variables are passed by the Slider and are ready to be used inside the template: value - the current value when using a regular slider and: selectionStart and selectionEnd - the current values when using a range slider</designerProperty>
    <designerProperty>Key: Value,               DisplayName: Value,                 FieldType: Float,   DefaultValue: 0,          Description: The underlying value of the Slider.</designerProperty>
    <designerProperty>Key: Enabled,             DisplayName: Enabled,               FieldType: Boolean, DefaultValue: True,       Description: Enable/Disable the Slider widget.</designerProperty>
    <designerProperty>Key: Classes,             DisplayName: Classes,               FieldType: String,  DefaultValue: ,           Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,               DisplayName: Style,                 FieldType: String,  DefaultValue: ,           Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getEnabled" HideFromIDE="true">_getenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getMax" HideFromIDE="true">_getmax</name>
      <returntype>float</returntype>
    </method>
    <method>
      <name DesignerName="getMin" HideFromIDE="true">_getmin</name>
      <returntype>float</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getValue" HideFromIDE="true">_getvalue</name>
      <returntype>float</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Resize">_resize</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEnabled" HideFromIDE="true">_setenabled</name>
      <comment> Enable/Disable the Slider widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Enabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMax" HideFromIDE="true">_setmax</name>
      <comment> Gets/Sets the max value of the Slider.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MaxValue</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMin" HideFromIDE="true">_setmin</name>
      <comment> Gets/Sets the min value of the Slider.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MinValue</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValue" HideFromIDE="true">_setvalue</name>
      <comment> Gets / Sets the value of the slider
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Enabled">_enabled</name>
      <comment> Enable/Disable the Slider widget.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Max">_max</name>
      <comment> Gets/Sets the max value of the Slider.
</comment>
      <returntype>float</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Min">_min</name>
      <comment> Gets/Sets the min value of the Slider.
</comment>
      <returntype>float</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Value">_value</name>
      <comment> Gets / Sets the value of the slider
</comment>
      <returntype>float</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendonotification</name>
    <shortname>BANanoKendoNotification</shortname>
    <designerProperty>Key: Button,         DisplayName: Button,         FieldType: Boolean, DefaultValue: False,                                     Description: Determines whether the notifications will include a hide button.</designerProperty>
    <designerProperty>Key: Width,          DisplayName: Width,          FieldType: String,  DefaultValue: ,                                          Description: Defines the notifications' width. Numbers are treated as pixels.</designerProperty>
    <designerProperty>Key: Height,         DisplayName: Height,         FieldType: String,  DefaultValue: ,                                          Description: Defines the notifications' height. Numbers are treated as pixels.</designerProperty>
    <designerProperty>Key: AllowHideAfter, DisplayName: AllowHideAfter, FieldType: Int,     DefaultValue: 0,       MinRange: 0,                      Description: Indicates the period in milliseconds after which a notification can be dismissed (hidden) by the user.</designerProperty>
    <designerProperty>Key: AutoHideAfter,  DisplayName: AutoHideAfter,  FieldType: Int,     DefaultValue: 5000,    MinRange: 0,                      Description: Indicates the period in milliseconds after which a notification disappears automatically. Setting a zero value disables this behavior.</designerProperty>
    <designerProperty>Key: HideOnClick,    DisplayName: HideOnClick,    FieldType: Boolean, DefaultValue: True,                                      Description: Determines whether notifications can be hidden by clicking anywhere on their content.</designerProperty>
    <designerProperty>Key: Stacking,       DisplayName: Stacking,       FieldType: String,  DefaultValue: default, List: up|right|down|left|default, Description: Determines the direction in which multiple notification will stack (arrange) with regard to the first one.</designerProperty>
    <designerProperty>Key: Classes,        DisplayName: Classes,        FieldType: String,  DefaultValue: , Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,          DisplayName: Style,          FieldType: String,  DefaultValue: , Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Hide">_hide</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Show">_show</name>
      <comment> NotificationType: Built-in types include "info", "success", "warning" and "error".
 Custom types (not supported yet) should match the types from the template configuration.
 If this argument is not supplied, then "info" is assumed.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>NotificationText</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>NotificationType</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ShowError">_showerror</name>
      <comment> This is a shorthand method for Show(data, "error")
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>NotificationText</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ShowInfo">_showinfo</name>
      <comment> This is a shorthand method for Show(data, "info")
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>NotificationText</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ShowSuccess">_showsuccess</name>
      <comment> This is a shorthand method for Show(data, "success")
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>NotificationText</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ShowWarning">_showwarning</name>
      <comment> This is a shorthand method for Show(data, "warning")
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>NotificationText</name>
        <type>String</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendonumerictextbox</name>
    <shortname>BANanoKendoNumericTextBox</shortname>
    <event>Change(Event As Map)</event>
    <event>Spin(Event As Map)</event>
    <designerProperty>Key: Culture,          DisplayName: Culture,          FieldType: String,  DefaultValue: ,      Description: Specifies the culture info used by the widget. Default: "en-US". Note: add .../cultures/kendo.culture.[culture].min.js to your projekt!</designerProperty>
    <designerProperty>Key: Decimals,         DisplayName: Decimals,         FieldType: Int,     DefaultValue: 0,     Description: Specifies the number precision applied to the widget value and when the NumericTextBox is focused.</designerProperty>
    <designerProperty>Key: Factor,           DisplayName: Factor,           FieldType: Float,   DefaultValue: 1,     Description: Specifies the factor by which the value is multiplied. The obtained result is used as edit value. So if 15 as string is entered in the NumericTextBox and the factor value is set to 100 the visual value will be 1500. On blur the visual value will be divided by 100 thus scaling the widget value to the original proportion.</designerProperty>
    <designerProperty>Key: Format,           DisplayName: Format,           FieldType: String,  DefaultValue: ,      Description: Specifies the number format used when the widget is not focused. Any valid number format is allowed.</designerProperty>
    <designerProperty>Key: Min,              DisplayName: Min,              FieldType: Float,   DefaultValue: 0,     Description: Specifies the smallest value the user can enter.</designerProperty>
    <designerProperty>Key: Max,              DisplayName: Max,              FieldType: Float,   DefaultValue: 100,   Description: Specifies the largest value the user can enter.</designerProperty>
    <designerProperty>Key: Placeholder,      DisplayName: Placeholder,      FieldType: String,  DefaultValue: ,      Description: The hint displayed by the widget when it is empty. Not set by default.</designerProperty>
    <designerProperty>Key: RestrictDecimals, DisplayName: RestrictDecimals, FieldType: Boolean, DefaultValue: False, Description: Specifies whether the decimals length should be restricted during typing. The length of the fraction is defined by the decimals value.</designerProperty>
    <designerProperty>Key: Round,            DisplayName: Round,            FieldType: Boolean, DefaultValue: True,  Description: Specifies whether the value should be rounded or truncated. The length of the fraction is defined by the decimals value.</designerProperty>
    <designerProperty>Key: Spinners,         DisplayName: Spinners,         FieldType: Boolean, DefaultValue: True,  Description: Specifies whether the up and down spin buttons should be rendered</designerProperty>
    <designerProperty>Key: Step,             DisplayName: Step,             FieldType: Float,   DefaultValue: 1,     Description: Specifies the value used to increment or decrement widget value.</designerProperty>
    <designerProperty>Key: UpArrowText,      DisplayName: UpArrowText,      FieldType: String,  DefaultValue: ,      Description: Specifies the text of the tooltip on the up arrow.</designerProperty>
    <designerProperty>Key: DownArrowText,    DisplayName: DownArrowText,    FieldType: String,  DefaultValue: ,      Description: Specifies the text of the tooltip on the down arrow.</designerProperty>
    <designerProperty>Key: Value,            DisplayName: Value,            FieldType: Float,   DefaultValue: 0,     Description: Specifies the value of the NumericTextBox widget.</designerProperty>
    <designerProperty>Key: Classes,          DisplayName: Classes,          FieldType: String, DefaultValue: ,  Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,            DisplayName: Style,            FieldType: String, DefaultValue: ,  Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getCulture" HideFromIDE="true">_getculture</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDecimals" HideFromIDE="true">_getdecimals</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getDownArrowText" HideFromIDE="true">_getdownarrowtext</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getFactor" HideFromIDE="true">_getfactor</name>
      <returntype>float</returntype>
    </method>
    <method>
      <name DesignerName="getFormat">_getformat</name>
      <returntype>float</returntype>
    </method>
    <method>
      <name DesignerName="getMax" HideFromIDE="true">_getmax</name>
      <returntype>float</returntype>
    </method>
    <method>
      <name DesignerName="getMin" HideFromIDE="true">_getmin</name>
      <returntype>float</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getPlaceholder" HideFromIDE="true">_getplaceholder</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getRestrictDecimals" HideFromIDE="true">_getrestrictdecimals</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getRound" HideFromIDE="true">_getround</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getSpinners" HideFromIDE="true">_getspinners</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getStep" HideFromIDE="true">_getstep</name>
      <returntype>float</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getUpArrowText" HideFromIDE="true">_getuparrowtext</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getValue">_getvalue</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setCulture" HideFromIDE="true">_setculture</name>
      <comment>
Specifies the culture info used by the widget. Default: "en-US"
note: add .../cultures/kendo.culture.[culture].min.js to your projekt!
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Culture</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDecimals" HideFromIDE="true">_setdecimals</name>
      <comment>
Specifies the number precision applied to the widget value and when the NumericTextBox is focused.
If not set, the precision defined by the current culture is used. If the user enters a number with
a greater precision than is currently configured, the widget value will be rounded.

For example, if decimals is 2 and the user inputs 12.346, the value will become 12.35.
If the user inputs 12.99, the value will become 13.00.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Decimals</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDownArrowText" HideFromIDE="true">_setdownarrowtext</name>
      <comment>
Specifies the text of the tooltip on the down arrow.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DownArrowText</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFactor" HideFromIDE="true">_setfactor</name>
      <comment>
Specifies the factor by which the value is multiplied. The obtained result is used as edit value.
So if 15 as string is entered in the NumericTextBox and the factor value is set to 100 the visual
value will be 1500. On blur the visual value will be divided by 100 thus scaling the widget value
to the original proportion.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Factor</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFormat">_setformat</name>
      <comment>
Specifies the number format used when the widget is not focused. Any valid number format is allowed.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Format</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMax" HideFromIDE="true">_setmax</name>
      <comment>
Specifies the largest value the user can enter.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MaxValue</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMin" HideFromIDE="true">_setmin</name>
      <comment>
Specifies the smallest value the user can enter.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MinValue</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setPlaceholder" HideFromIDE="true">_setplaceholder</name>
      <comment>
The hint displayed by the widget when it is empty. Not set by default.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Placeholder</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setRestrictDecimals" HideFromIDE="true">_setrestrictdecimals</name>
      <comment>
Specifies whether the decimals length should be restricted during typing.
The length of the fraction is defined by the decimals value.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>RestrictDecimals</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setRound" HideFromIDE="true">_setround</name>
      <comment>
Specifies whether the value should be rounded or truncated.
The length of the fraction is defined by the decimals value.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>RoundValue</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSpinners" HideFromIDE="true">_setspinners</name>
      <comment>
Specifies whether the up and down spin buttons should be rendered
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Spinners</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStep" HideFromIDE="true">_setstep</name>
      <comment>
Specifies the value used to increment or decrement widget value.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>StepValue</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setUpArrowText" HideFromIDE="true">_setuparrowtext</name>
      <comment>
Specifies the text of the tooltip on the up arrow.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>UpArrowText</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValue">_setvalue</name>
      <comment>
Specifies the value of the NumericTextBox widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Culture">_culture</name>
      <comment>
Specifies the culture info used by the widget. Default: "en-US"
note: add .../cultures/kendo.culture.[culture].min.js to your projekt!
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Decimals">_decimals</name>
      <comment>
Specifies the number precision applied to the widget value and when the NumericTextBox is focused.
If not set, the precision defined by the current culture is used. If the user enters a number with
a greater precision than is currently configured, the widget value will be rounded.

For example, if decimals is 2 and the user inputs 12.346, the value will become 12.35.
If the user inputs 12.99, the value will become 13.00.
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DownArrowText">_downarrowtext</name>
      <comment>
Specifies the text of the tooltip on the down arrow.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Factor">_factor</name>
      <comment>
Specifies the factor by which the value is multiplied. The obtained result is used as edit value.
So if 15 as string is entered in the NumericTextBox and the factor value is set to 100 the visual
value will be 1500. On blur the visual value will be divided by 100 thus scaling the widget value
to the original proportion.
</comment>
      <returntype>float</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Max">_max</name>
      <comment>
Specifies the largest value the user can enter.
</comment>
      <returntype>float</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Min">_min</name>
      <comment>
Specifies the smallest value the user can enter.
</comment>
      <returntype>float</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Placeholder">_placeholder</name>
      <comment>
The hint displayed by the widget when it is empty. Not set by default.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="RestrictDecimals">_restrictdecimals</name>
      <comment>
Specifies whether the decimals length should be restricted during typing.
The length of the fraction is defined by the decimals value.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Round">_round</name>
      <comment>
Specifies whether the value should be rounded or truncated.
The length of the fraction is defined by the decimals value.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Spinners">_spinners</name>
      <comment>
Specifies whether the up and down spin buttons should be rendered
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Step">_step</name>
      <comment>
Specifies the value used to increment or decrement widget value.
</comment>
      <returntype>float</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="UpArrowText">_uparrowtext</name>
      <comment>
Specifies the text of the tooltip on the up arrow.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendolistbox</name>
    <shortname>BANanoKendoListbox</shortname>
    <event>Add(Event As Map)</event>
    <event>Change(Event As Map)</event>
    <event>DataBound(Event As Map)</event>
    <event>DragStart(Event As Map)</event>
    <event>Drag(Event As Map)</event>
    <event>Drop(Event As Map)</event>
    <event>DragEnd(Event As Map)</event>
    <event>Remove(Event As Map)</event>
    <event>ReOrder(Event As Map)</event>
    <designerProperty>Key: Template,      DisplayName: Template,       FieldType: String,  DefaultValue: ,                              Description: Specifies the item template of the ListBox.</designerProperty>
    <designerProperty>Key: Selectable,    DisplayName: Selectable,     FieldType: String,  DefaultValue: single, List: single|multiple, Description: Indicates whether the selection is single or multiple.</designerProperty>
    <designerProperty>Key: Draggable,     DisplayName: Draggable,      FieldType: Boolean, DefaultValue: False,                         Description: Indicates whether the ListBox items can be dragged and dropped.</designerProperty>
    <designerProperty>Key: Classes,       DisplayName: Classes,        FieldType: String, DefaultValue: , Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,         DisplayName: Style,          FieldType: String, DefaultValue: , Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="ClearSelection">_clearselection</name>
      <comment>Clears the selected items of the ListBox and triggers the change event.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DataItems">_dataitems</name>
      <returntype>Object</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="EnableItem">_enableitem</name>
      <comment>Enables or disables the ListBox items.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ItemIndex</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Enabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDataSource" HideFromIDE="true">_getdatasource</name>
      <returntype>b4j.example.bananokendodatasource</returntype>
    </method>
    <method>
      <name DesignerName="getDataTextField" HideFromIDE="true">_getdatatextfield</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDataValueField" HideFromIDE="true">_getdatavaluefield</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="GetSelectedDataSourceItems">_getselecteddatasourceitems</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="GetSelectedItems">_getselecteditems</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getTemplate" HideFromIDE="true">_gettemplate</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getText" HideFromIDE="true">_gettext</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getValue" HideFromIDE="true">_getvalue</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Refresh">_refresh</name>
      <comment>Reloads the data and repaints the ListBox. Triggers the dataBound event.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="SelectItem">_selectitem</name>
      <comment>Gets or sets the selected ListBox items.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ItemIndex</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SelectItemByKey">_selectitembykey</name>
      <comment>Gets or sets the selected ListBox items.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Keyname</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataSource" HideFromIDE="true">_setdatasource</name>
      <returntype>String</returntype>
      <parameter>
        <name>DataSource</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataTextField" HideFromIDE="true">_setdatatextfield</name>
      <returntype>String</returntype>
      <parameter>
        <name>DataTextField</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataValueField" HideFromIDE="true">_setdatavaluefield</name>
      <returntype>String</returntype>
      <parameter>
        <name>DataValueField</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTemplate" HideFromIDE="true">_settemplate</name>
      <returntype>String</returntype>
      <parameter>
        <name>Template</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setText" HideFromIDE="true">_settext</name>
      <returntype>String</returntype>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValue" HideFromIDE="true">_setvalue</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataSource">_datasource</name>
      <returntype>b4j.example.bananokendodatasource</returntype>
      <parameter>
        <name>Value</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataTextField">_datatextfield</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataValueField">_datavaluefield</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Template">_template</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Text">_text</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Value">_value</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendotoolbar</name>
    <shortname>BANanoKendoToolBar</shortname>
    <event>Click(Event As Map)</event>
    <event>Close(Event As Map)</event>
    <event>Open(Event As Map)</event>
    <event>Toggle(Event As Map)</event>
    <event>OverflowClose(Event As Map)</event>
    <event>OverflowOpen(Event As Map)</event>
    <designerProperty>Key: Classes, DisplayName: Classes, FieldType: String, DefaultValue: , Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style, DisplayName: Style, FieldType: String, DefaultValue: , Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddItem">_additem</name>
      <returntype>String</returntype>
      <parameter>
        <name>Item</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <comment> this is the place where you create the view in html and run initialize javascript
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getItems" HideFromIDE="true">_getitems</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="RemoveItem">_removeitem</name>
      <returntype>String</returntype>
      <parameter>
        <name>ItemID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setItems" HideFromIDE="true">_setitems</name>
      <returntype>String</returntype>
      <parameter>
        <name>Items</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Trigger">_trigger</name>
      <returntype>String</returntype>
      <parameter>
        <name>event</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>params</name>
        <type>String[]</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Items">_items</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendodropdownlist</name>
    <shortname>BANanoKendoDropDownList</shortname>
    <event>Change(Event As Map)</event>
    <event>Close(Event As Map)</event>
    <event>DataBound(Event As Map)</event>
    <event>Filtering(Event As Map)</event>
    <event>Open(Event As Map)</event>
    <event>Select(Event As Map)</event>
    <event>Cascade(Event As Map)</event>
    <designerProperty>Key: DataTextField,       DisplayName: DataTextField,       FieldType: String,  DefaultValue: ,                                              Description: The field of the data item that provides the text content of the list items. The widget will filter the data source based on this field.</designerProperty>
    <designerProperty>Key: DataValueField,      DisplayName: DataValueField,      FieldType: String,  DefaultValue: ,                                              Description: The field of the data item that provides the value of the widget.</designerProperty>
    <designerProperty>Key: Filter,              DisplayName: Filter,              FieldType: String,  DefaultValue: none, List: none|startswith|endswith|contains, Description: The filtering method used to determine the suggestions for the current value.</designerProperty>
    <designerProperty>Key: Delay,               DisplayName: Delay,               FieldType: Int,     DefaultValue: 500,   Description: Specifies the delay in milliseconds before the search-text typed by the end user is sent for filtering.</designerProperty>
    <designerProperty>Key: AutoWidth,           DisplayName: AutoWidth,           FieldType: Boolean, DefaultValue: False, Description: If set to true the widget automatically adjusts the width of the popup element and does not wrap up the item label.</designerProperty>
    <designerProperty>Key: AutoBind,            DisplayName: AutoBind,            FieldType: Boolean, DefaultValue: True,  Description: Controls whether to bind the widget to the data source on initialization.</designerProperty>
    <designerProperty>Key: IgnoreCase,          DisplayName: IgnoreCase,          FieldType: Boolean, DefaultValue: True,  Description: If set to false case-sensitive search will be performed to find suggestions. The widget performs case-insensitive searching by default.</designerProperty>
    <designerProperty>Key: GroupTemplate,       DisplayName: GroupTemplate,       FieldType: String,  DefaultValue: ,      Description: The template used to render the groups. By default the widget displays only the value of the group.</designerProperty>
    <designerProperty>Key: FixedGroupTemplate,  DisplayName: FixedGroupTemplate,  FieldType: String,  DefaultValue: ,      Description: The template used to render the fixed header group. By default the widget displays only the value of the current group.</designerProperty>
    <designerProperty>Key: FooterTemplate,      DisplayName: FooterTemplate,      FieldType: String,  DefaultValue: ,      Description: The template used to render the footer template.</designerProperty>
    <designerProperty>Key: OptionLabelTemplate, DisplayName: OptionLabelTemplate, FieldType: String,  DefaultValue: ,      Description: The template used to render the option label.</designerProperty>
    <designerProperty>Key: HeaderTemplate,      DisplayName: HeaderTemplate,      FieldType: String,  DefaultValue: ,      Description: Specifies a static HTML content which will be rendered as a header of the popup element.</designerProperty>
    <designerProperty>Key: Template,            DisplayName: Template,            FieldType: String,  DefaultValue: ,      Description: The template used to render the items. By default the widget displays only the text of the data item (configured via dataTextField).</designerProperty>
    <designerProperty>Key: ValueTemplate,       DisplayName: ValueTemplate,       FieldType: String,  DefaultValue: ,      Description: The valueTemplate used to render the selected value. By default the widget displays only the text of the data item (configured via dataTextField).</designerProperty>
    <designerProperty>Key: NoDataTemplate,      DisplayName: NoDataTemplate,      FieldType: String,  DefaultValue: ,      Description: The template used to render the "no data" template, which will be displayed if no results are found or the underlying data source is empty.</designerProperty>
    <designerProperty>Key: Height,              DisplayName: Height,              FieldType: String, DefaultValue: , Description: The height of the suggestion popup in pixels. The default value is 200 pixels.</designerProperty>
    <designerProperty>Key: Classes, DisplayName: Classes, FieldType: String, DefaultValue: , Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style, DisplayName: Style, FieldType: String, DefaultValue: , Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDataSource" HideFromIDE="true">_getdatasource</name>
      <returntype>b4j.example.bananokendodatasource</returntype>
    </method>
    <method>
      <name DesignerName="getDataTextField" HideFromIDE="true">_getdatatextfield</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDataValueField" HideFromIDE="true">_getdatavaluefield</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getFilter" HideFromIDE="true">_getfilter</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getHeight" HideFromIDE="true">_getheight</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getText" HideFromIDE="true">_gettext</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getValue" HideFromIDE="true">_getvalue</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Refresh">_refresh</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setDataSource" HideFromIDE="true">_setdatasource</name>
      <returntype>String</returntype>
      <parameter>
        <name>DataSource</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataTextField" HideFromIDE="true">_setdatatextfield</name>
      <returntype>String</returntype>
      <parameter>
        <name>DataTextField</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDataValueField" HideFromIDE="true">_setdatavaluefield</name>
      <returntype>String</returntype>
      <parameter>
        <name>DataValueField</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFilter" HideFromIDE="true">_setfilter</name>
      <comment>Gets/Sets the filter value
The supported filter values are 'none', 'startswith', 'endswith' and 'contains'.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Filter</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setHeight" HideFromIDE="true">_setheight</name>
      <returntype>String</returntype>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setText" HideFromIDE="true">_settext</name>
      <returntype>String</returntype>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValue" HideFromIDE="true">_setvalue</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="DataSource">_datasource</name>
      <returntype>b4j.example.bananokendodatasource</returntype>
      <parameter>
        <name>Value</name>
        <type>b4j.example.bananokendodatasource</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataTextField">_datatextfield</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DataValueField">_datavaluefield</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Filter">_filter</name>
      <comment>Gets/Sets the filter value
The supported filter values are 'none', 'startswith', 'endswith' and 'contains'.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Height">_height</name>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Text">_text</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Value">_value</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendoprogressbar</name>
    <shortname>BANanoKendoProgressBar</shortname>
    <event>Change(Event As Map)</event>
    <event>Complete(Event As Map)</event>
    <designerProperty>Key: Min,           DisplayName: Min,            FieldType: Int,     DefaultValue: 0,                                     Description: The minimum value of the ProgressBar.</designerProperty>
    <designerProperty>Key: Max,           DisplayName: Max,            FieldType: Int,     DefaultValue: 100,                                   Description: The maximum value of the ProgressBar.</designerProperty>
    <designerProperty>Key: Value,         DisplayName: Value,          FieldType: Int,     DefaultValue: 0,                                     Description: The underlying value of the ProgressBar.</designerProperty>
    <designerProperty>Key: Orientation,   DisplayName: Orientation,    FieldType: String,  DefaultValue: horizontal, List: horizontal|vertical, Description: The orientation of the ProgressBar. Possible values are horizontal and vertical.</designerProperty>
    <designerProperty>Key: Indeterminate, DisplayName: Indeterminate,  FieldType: Boolean, DefaultValue: False,                                 Description: Setting this value to True will set the state of the ProgressBar to indeterminate.</designerProperty>
    <designerProperty>Key: Type,          DisplayName: Type,           FieldType: String,  DefaultValue: value, List: value|percent|chunk,      Description: Specifies the type of the ProgressBar.</designerProperty>
    <designerProperty>Key: ChunkCount,    DisplayName: ChunkCount,     FieldType: Int,     DefaultValue: 5,                                     Description: Specifies the number of chunks. This property is applicable only when the type of the ProgressBar is set to chunk.</designerProperty>
    <designerProperty>Key: ShowStatus,    DisplayName: ShowStatus,     FieldType: Boolean, DefaultValue: True,                                  Description: Specifies if the progress status will be shown.</designerProperty>
    <designerProperty>Key: Reverse,       DisplayName: Reverse,        FieldType: Boolean, DefaultValue: False,                                 Description: Specifies if the progress direction will be reversed.</designerProperty>
    <designerProperty>Key: Classes,       DisplayName: Classes,        FieldType: String, DefaultValue: , Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,         DisplayName: Style,          FieldType: String, DefaultValue: , Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DecreaseValue">_decreasevalue</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getIndeterminate" HideFromIDE="true">_getindeterminate</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getMaxValue" HideFromIDE="true">_getmaxvalue</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getMinValue" HideFromIDE="true">_getminvalue</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getValue" HideFromIDE="true">_getvalue</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="IncreaseValue">_increasevalue</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setIndeterminate" HideFromIDE="true">_setindeterminate</name>
      <returntype>String</returntype>
      <parameter>
        <name>Indeterminate</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMaxValue" HideFromIDE="true">_setmaxvalue</name>
      <comment> Gets / Sets the maximal value of the ProgressBar
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MaxValue</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMinValue" HideFromIDE="true">_setminvalue</name>
      <comment> Gets / Sets the minimal value of the ProgressBar
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MinValue</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValue" HideFromIDE="true">_setvalue</name>
      <comment> Gets / Sets the value of the ProgressBar
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Indeterminate">_indeterminate</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MaxValue">_maxvalue</name>
      <comment> Gets / Sets the maximal value of the ProgressBar
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="MinValue">_minvalue</name>
      <comment> Gets / Sets the minimal value of the ProgressBar
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Value">_value</name>
      <comment> Gets / Sets the value of the ProgressBar
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendosplitter</name>
    <shortname>BANanoKendoSplitter</shortname>
    <event>Collapse(Event As Map)</event>
    <event>ContentLoad(Event As Map)</event>
    <event>Error(Event As Map)</event>
    <event>Expand(Event As Map)</event>
    <event>LayoutChange(Event As Map)</event>
    <event>Resize(Event As Map)</event>
    <designerProperty>Key: CountPanes, DisplayName: CountPanes, FieldType: Int, DefaultValue: 2, MinRange: 2, Description: CountPanes (at least 2)</designerProperty>
    <designerProperty>Key: Orientation, DisplayName: Orientation, FieldType: String, DefaultValue: horizontal, List: horizontal|vertical, Description: Orientation</designerProperty>
    <designerProperty>Key: Classes, DisplayName: Classes, FieldType: String, DefaultValue: , Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style, DisplayName: Style, FieldType: String, DefaultValue: , Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AppendPanel">_appendpanel</name>
      <returntype>String</returntype>
      <parameter>
        <name>Panel</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getPanes" HideFromIDE="true">_getpanes</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="SetPanelContent">_setpanelcontent</name>
      <returntype>String</returntype>
      <parameter>
        <name>PanelIndex</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>PanelContent</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setPanes" HideFromIDE="true">_setpanes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Panes</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Trigger">_trigger</name>
      <returntype>String</returntype>
      <parameter>
        <name>event</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>params</name>
        <type>String[]</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Panes">_panes</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendotabstrip</name>
    <shortname>BANanoKendoTabStrip</shortname>
    <event>Activate(Event As Map)</event>
    <event>ContentLoad(Event As Map)</event>
    <event>Error(Event As Map)</event>
    <event>Select(Event As Map)</event>
    <event>Show(Event As Map)</event>
    <designerProperty>Key: Collapsible, DisplayName: Collapsible, FieldType: Boolean, DefaultValue: False, Description: Specifies whether the TabStrip should be able to collapse completely when clicking an expanded tab.</designerProperty>
    <designerProperty>Key: Classes, DisplayName: Classes, FieldType: String, DefaultValue: , Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style, DisplayName: Style, FieldType: String, DefaultValue: , Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AppendTab">_appendtab</name>
      <comment> Appends a tab to the collection of tabs in a TabStrip.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>TabStripTab</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="AppendTabs">_appendtabs</name>
      <comment> Appends a list of tabs to the collection of tabs in a TabStrip.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>TabStripTabs</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getContentUrls" HideFromIDE="true">_getcontenturls</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getHeight" HideFromIDE="true">_getheight</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getSelectedTab" HideFromIDE="true">_getselectedtab</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getWidth" HideFromIDE="true">_getwidth</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setContentUrls" HideFromIDE="true">_setcontenturls</name>
      <comment> Sets an array with the URLs from which the tabs content to be loaded from.
 If only specific tabs should be loaded via Ajax, then you should set the URLs
 to the corresponding positions in the array and set the other elements to null.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ContentUrls</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setHeight" HideFromIDE="true">_setheight</name>
      <returntype>String</returntype>
      <parameter>
        <name>Height</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setSelectedTab" HideFromIDE="true">_setselectedtab</name>
      <comment>Get/set the selected tab.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>TabToSelect</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setWidth" HideFromIDE="true">_setwidth</name>
      <returntype>String</returntype>
      <parameter>
        <name>Width</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Trigger">_trigger</name>
      <returntype>String</returntype>
      <parameter>
        <name>event</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>params</name>
        <type>String[]</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="ContentUrls">_contenturls</name>
      <comment> Sets an array with the URLs from which the tabs content to be loaded from.
 If only specific tabs should be loaded via Ajax, then you should set the URLs
 to the corresponding positions in the array and set the other elements to null.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Height">_height</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="SelectedTab">_selectedtab</name>
      <comment>Get/set the selected tab.
</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Width">_width</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendorangeslider</name>
    <shortname>BANanoKendoRangeSlider</shortname>
    <event>Change(Event As Map)</event>
    <event>Slide(Event As Map)</event>
    <designerProperty>Key: LeftDragHandleTitle,  DisplayName: Left drag handle title,  FieldType: String,  DefaultValue: Drag,       Description: The title of the left drag handle of the Slider.</designerProperty>
    <designerProperty>Key: RightDragHandleTitle, DisplayName: Right drag handle title, FieldType: String,  DefaultValue: Drag,       Description: The title of the right drag handle of the Slider.</designerProperty>
    <designerProperty>Key: Min,                  DisplayName: Minimum value,           FieldType: Float,   DefaultValue: 0,          Description: The minimum value of the Slider.</designerProperty>
    <designerProperty>Key: Max,                  DisplayName: Maximum value,           FieldType: Float,   DefaultValue: 10,         Description: The maximum value of the Slider.</designerProperty>
    <designerProperty>Key: Orientation,          DisplayName: Orientation,             FieldType: String,  DefaultValue: horizontal, Description: The orientation of a Slider., List: horizontal|vertical</designerProperty>
    <designerProperty>Key: LargeStep,            DisplayName: Large step,              FieldType: Float,   DefaultValue: 5,          Description: The delta with which the value will change when the user presses the Page Up or Page Down key (the drag handle must be focused). Note: largeStep will also set a large tick for every large step. Must be a positive number, larger than smallStep.</designerProperty>
    <designerProperty>Key: SmallStep,            DisplayName: Small step,              FieldType: Float,   DefaultValue: 1,          Description: The small step value of the Slider. Must be a positive number. Otherwise an Javascript exception will be thrown. The small step value determines the amount of Slider value change when the end user clicks on the increase or decrease buttons of the Slider; presses the arrow keys (the drag handle must be focused); drags the drag handle.</designerProperty>
    <designerProperty>Key: TickPlacement,        DisplayName: Tick placement,          FieldType: String,  DefaultValue: both,       Description: Denotes the location of the tick marks in the Slider., List: topLeft|bottomRight|both|none</designerProperty>
    <designerProperty>Key: TooltipEnabled,       DisplayName: Tooltip enabled,         FieldType: Boolean, DefaultValue: True,       Description: Disables (false) or enables (true) the tooltip of the Slider.</designerProperty>
    <designerProperty>Key: TooltipFormat,        DisplayName: Tooltip format,          FieldType: String,  DefaultValue: ,           Description: Format string for the text of the tooltip. Note: The applied format will also influence the appearance of the Slider tick labels. The slider widget supports precision of up-to 10 digits after the decimals point.</designerProperty>
    <designerProperty>Key: TooltipTemplate,      DisplayName: Tooltip template,        FieldType: String,  DefaultValue: ,           Description: Template of the tooltip. The following variables are passed by the Slider and are ready to be used inside the template: value - the current value when using a regular slider and: selectionStart and selectionEnd - the current values when using a range slider</designerProperty>
    <designerProperty>Key: ValueStart,           DisplayName: Start value,             FieldType: Float,   DefaultValue: 0,          Description: The underlying start value of the Slider.</designerProperty>
    <designerProperty>Key: ValueEnd,             DisplayName: End value,               FieldType: Float,   DefaultValue: 0,          Description: The underlying end value of the Slider.</designerProperty>
    <designerProperty>Key: Enabled, DisplayName: Enabled, FieldType: Boolean, DefaultValue: True,   Description: Enable/Disable the Slider widget.</designerProperty>
    <designerProperty>Key: Classes,             DisplayName: Classes,               FieldType: String,  DefaultValue: ,           Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,               DisplayName: Style,                 FieldType: String,  DefaultValue: ,           Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getEnabled" HideFromIDE="true">_getenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getEndValue" HideFromIDE="true">_getendvalue</name>
      <returntype>float</returntype>
    </method>
    <method>
      <name DesignerName="getMax" HideFromIDE="true">_getmax</name>
      <returntype>float</returntype>
    </method>
    <method>
      <name DesignerName="getMin" HideFromIDE="true">_getmin</name>
      <returntype>float</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStartValue" HideFromIDE="true">_getstartvalue</name>
      <returntype>float</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Resize">_resize</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEnabled" HideFromIDE="true">_setenabled</name>
      <comment> Enable/Disable the Slider widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Enabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEndValue" HideFromIDE="true">_setendvalue</name>
      <comment> Gets / Sets the end value of the slider
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>EndValue</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMax" HideFromIDE="true">_setmax</name>
      <comment> Gets/Sets the max value of the Slider.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MaxValue</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMin" HideFromIDE="true">_setmin</name>
      <comment> Gets/Sets the min value of the Slider.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MinValue</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStartValue" HideFromIDE="true">_setstartvalue</name>
      <comment> Gets / Sets the start value of the slider
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>StartValue</name>
        <type>float</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Enabled">_enabled</name>
      <comment> Enable/Disable the Slider widget.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="EndValue">_endvalue</name>
      <comment> Gets / Sets the end value of the slider
</comment>
      <returntype>float</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Max">_max</name>
      <comment> Gets/Sets the max value of the Slider.
</comment>
      <returntype>float</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Min">_min</name>
      <comment> Gets/Sets the min value of the Slider.
</comment>
      <returntype>float</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="StartValue">_startvalue</name>
      <comment> Gets / Sets the start value of the slider
</comment>
      <returntype>float</returntype>
      <parameter>
        <name>Value</name>
        <type>float</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendodialog</name>
    <shortname>BANanoKendoDialog</shortname>
    <event>Close(Event As Map)</event>
    <event>Hide(Event As Map)</event>
    <event>InitOpen(Event As Map)</event>
    <event>Open(Event As Map)</event>
    <event>Show(Event As Map)</event>
    <designerProperty>Key: Title,     DisplayName: Title,     FieldType: String,  DefaultValue: ,      Description: [ToDo]</designerProperty>
    <designerProperty>Key: Visible,   DisplayName: Visible,   FieldType: Boolean, DefaultValue: True,  Description: [ToDo]</designerProperty>
    <designerProperty>Key: Closable,  DisplayName: Closable,  FieldType: Boolean, DefaultValue: True,  Description: [ToDo]</designerProperty>
    <designerProperty>Key: Modal,     DisplayName: Modal,     FieldType: Boolean, DefaultValue: True,  Description: [ToDo]</designerProperty>
    <designerProperty>Key: Width,     DisplayName: Width,     FieldType: String,  DefaultValue: ,  Description: [ToDo]</designerProperty>
    <designerProperty>Key: MinWidth,  DisplayName: MinWidth,  FieldType: String,  DefaultValue: ,  Description: [ToDo]</designerProperty>
    <designerProperty>Key: MaxWidth,  DisplayName: MaxWidth,  FieldType: String,  DefaultValue: ,  Description: [ToDo]</designerProperty>
    <designerProperty>Key: Height,    DisplayName: Height,    FieldType: String,  DefaultValue: ,  Description: [ToDo]</designerProperty>
    <designerProperty>Key: MinHeight, DisplayName: MinHeight, FieldType: String,  DefaultValue: ,  Description: [ToDo]</designerProperty>
    <designerProperty>Key: MaxHeight, DisplayName: MaxHeight, FieldType: String,  DefaultValue: ,  Description: [ToDo]</designerProperty>
    <designerProperty>Key: Classes, DisplayName: Classes, FieldType: String, DefaultValue: , Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style, DisplayName: Style, FieldType: String, DefaultValue: , Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Close">_close</name>
      <comment>Closes the dialog
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getContent" HideFromIDE="true">_getcontent</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getTitle" HideFromIDE="true">_gettitle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Open">_open</name>
      <comment>Opens the dialog
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setActions" HideFromIDE="true">_setactions</name>
      <returntype>String</returntype>
      <parameter>
        <name>Actions</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setContent" HideFromIDE="true">_setcontent</name>
      <comment>Gets or sets the content of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>NewContent</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setTitle" HideFromIDE="true">_settitle</name>
      <comment>Gets or sets the title of the dialog.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Title</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="ToFront">_tofront</name>
      <comment>Increases the z-index style of the dialog to bring the instance on top of other open dialogs.
This method is executed automatically when the open method is used.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Trigger">_trigger</name>
      <returntype>String</returntype>
      <parameter>
        <name>event</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>params</name>
        <type>String[]</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Classes">_classes</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Content">_content</name>
      <comment>Gets or sets the content of the window.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Title">_title</name>
      <comment>Gets or sets the title of the dialog.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Actions">_actions</name>
      <returntype>void</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendodatepicker</name>
    <shortname>BANanoKendoDatePicker</shortname>
    <event>Change(Event As Map)</event>
    <event>Close(Event As Map)</event>
    <event>Open(Event As Map)</event>
    <designerProperty>Key: ARIATemplate, DisplayName: ARIATemplate, FieldType: String,  DefaultValue: ,                                       Description: Specifies a template used to populate value of the aria-label attribute.</designerProperty>
    <designerProperty>Key: Culture,      DisplayName: Culture,      FieldType: String,  DefaultValue: ,                                       Description: Specifies the culture info used by the widget.</designerProperty>
    <designerProperty>Key: DateInput,    DisplayName: DateInput,    FieldType: Boolean, DefaultValue: False,                                  Description: Specifies if the DatePicker will use DateInput for editing value</designerProperty>
    <designerProperty>Key: Depth,        DisplayName: Depth,        FieldType: String,  DefaultValue: month, List: month|year|decade|century, Description: Specifies the navigation depth.</designerProperty>
    <designerProperty>Key: Footer,       DisplayName: Footer,       FieldType: String,  DefaultValue: ,                                       Description: The template which renders the footer of the calendar.</designerProperty>
    <designerProperty>Key: Format,       DisplayName: Format,       FieldType: String,  DefaultValue: ,                                       Description: Specifies the format, which is used to format the value of the DateTimePicker displayed in the input. The format also will be used to parse the input.</designerProperty>
    <designerProperty>Key: WeekNumber,   DisplayName: WeekNumber,   FieldType: Boolean, DefaultValue: False,                                  Description: If set to true a week of the year will be shown on the left side of the calendar.</designerProperty>
    <designerProperty>Key: Start,        DisplayName: Start,        FieldType: String,  DefaultValue: month, List: month|year|decade|century, Description: Specifies the start view of the calendar.</designerProperty>
    <designerProperty>Key: Enabled,      DisplayName: Enabled,      FieldType: Boolean, DefaultValue: True,                                   Description: Enable/Disable the widget.</designerProperty>
    <designerProperty>Key: Visible,      DisplayName: Visible,      FieldType: Boolean, DefaultValue: True,                                   Description: Show/Hide the widget.</designerProperty>
    <designerProperty>Key: Classes,      DisplayName: Classes,      FieldType: String, DefaultValue: ,                                        Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,        DisplayName: Style,        FieldType: String, DefaultValue: ,                                        Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getAnimation" HideFromIDE="true">_getanimation</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getARIATemplate" HideFromIDE="true">_getariatemplate</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getCulture" HideFromIDE="true">_getculture</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDateInput" HideFromIDE="true">_getdateinput</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getDates" HideFromIDE="true">_getdates</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getDepth" HideFromIDE="true">_getdepth</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDisableDates" HideFromIDE="true">_getdisabledates</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getEnabled" HideFromIDE="true">_getenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getFooter" HideFromIDE="true">_getfooter</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getFormat" HideFromIDE="true">_getformat</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getMax" HideFromIDE="true">_getmax</name>
      <returntype>long</returntype>
    </method>
    <method>
      <name DesignerName="getMin" HideFromIDE="true">_getmin</name>
      <returntype>long</returntype>
    </method>
    <method>
      <name DesignerName="getMonth" HideFromIDE="true">_getmonth</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getParseFormats" HideFromIDE="true">_getparseformats</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getStart" HideFromIDE="true">_getstart</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getValue" HideFromIDE="true">_getvalue</name>
      <returntype>long</returntype>
    </method>
    <method>
      <name DesignerName="getVisible" HideFromIDE="true">_getvisible</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getWeekNumber" HideFromIDE="true">_getweeknumber</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setAnimation" HideFromIDE="true">_setanimation</name>
      <comment>
Configures the opening and closing animations of the popups.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/animation
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Animation</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setARIATemplate" HideFromIDE="true">_setariatemplate</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ARIATemplate</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setCulture" HideFromIDE="true">_setculture</name>
      <comment>
Specifies the culture info used by the widget.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/culture
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Culture</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDateInput" HideFromIDE="true">_setdateinput</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DateInput</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDates" HideFromIDE="true">_setdates</name>
      <comment>
Specifies a list of dates which will be passed to the month template of the DateView.
All dates which match the date portion of the selected date will be used to re-bind the TimeView.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Dates</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDepth" HideFromIDE="true">_setdepth</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Depth</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDisableDates" HideFromIDE="true">_setdisabledates</name>
      <comment>
An array that will be used to determine which dates to be disabled for selection by the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DisableDates</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEnabled" HideFromIDE="true">_setenabled</name>
      <comment>
 Enable/Disable the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Enabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFooter" HideFromIDE="true">_setfooter</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Footer</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFormat" HideFromIDE="true">_setformat</name>
      <comment>
 https://docs.telerik.com/kendo-ui/framework/globalization/dateformatting
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Format</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMax" HideFromIDE="true">_setmax</name>
      <comment>
Specifies the maximum date, which the calendar can show. (default: Date(2099, 11, 31))
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MaxValue</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMin" HideFromIDE="true">_setmin</name>
      <comment>
Specifies the minimum date that the calendar can show. (default: Date(1900, 0, 1))
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MinValue</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMonth" HideFromIDE="true">_setmonth</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Month</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setParseFormats" HideFromIDE="true">_setparseformats</name>
      <comment>
Specifies the formats which are used to parse the value set with value() method or by direct input.
If not set the value of the options.format and options.timeFormat will be used.
Note that value of the format option is always used.
The timeFormat value also will be used if defined.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ParseFormats</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStart" HideFromIDE="true">_setstart</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Start</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValue" HideFromIDE="true">_setvalue</name>
      <comment>
 Gets / Sets the value of the widget
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setVisible" HideFromIDE="true">_setvisible</name>
      <comment>
 Show/Hide the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Visible</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setWeekNumber" HideFromIDE="true">_setweeknumber</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>WeekNumber</name>
        <type>boolean</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Animation">_animation</name>
      <comment>
Configures the opening and closing animations of the popups.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/animation
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="ARIATemplate">_ariatemplate</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Classes">_classes</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Culture">_culture</name>
      <comment>
Specifies the culture info used by the widget.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/culture
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DateInput">_dateinput</name>
      <comment>

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Dates">_dates</name>
      <comment>
Specifies a list of dates which will be passed to the month template of the DateView.
All dates which match the date portion of the selected date will be used to re-bind the TimeView.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Depth">_depth</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DisableDates">_disabledates</name>
      <comment>
An array that will be used to determine which dates to be disabled for selection by the widget.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Enabled">_enabled</name>
      <comment>
 Enable/Disable the widget.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Footer">_footer</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Format">_format</name>
      <comment>
 https://docs.telerik.com/kendo-ui/framework/globalization/dateformatting
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Max">_max</name>
      <comment>
Specifies the maximum date, which the calendar can show. (default: Date(2099, 11, 31))
</comment>
      <returntype>long</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Min">_min</name>
      <comment>
Specifies the minimum date that the calendar can show. (default: Date(1900, 0, 1))
</comment>
      <returntype>long</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Month">_month</name>
      <comment>

</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="ParseFormats">_parseformats</name>
      <comment>
Specifies the formats which are used to parse the value set with value() method or by direct input.
If not set the value of the options.format and options.timeFormat will be used.
Note that value of the format option is always used.
The timeFormat value also will be used if defined.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Start">_start</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Value">_value</name>
      <comment>
 Gets / Sets the value of the widget
</comment>
      <returntype>long</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Visible">_visible</name>
      <comment>
 Show/Hide the widget.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="WeekNumber">_weeknumber</name>
      <comment>

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendotimepicker</name>
    <shortname>BANanoKendoTimePicker</shortname>
    <event>Change(Event As Map)</event>
    <event>Close(Event As Map)</event>
    <event>Open(Event As Map)</event>
    <designerProperty>Key: Culture,   DisplayName: Culture,   FieldType: String,  DefaultValue: ,      Description: Specifies the culture info used by the widget.</designerProperty>
    <designerProperty>Key: DateInput, DisplayName: DateInput, FieldType: Boolean, DefaultValue: False, Description: Specifies if the DatePicker will use DateInput for editing value</designerProperty>
    <designerProperty>Key: Format,    DisplayName: Format,    FieldType: String,  DefaultValue: ,      Description: Specifies the format, which is used to format the value of the DateTimePicker displayed in the input. The format also will be used to parse the input.</designerProperty>
    <designerProperty>Key: Interval,  DisplayName: Interval,  FieldType: Int,     DefaultValue: 30,    Description: Specifies the interval between values in the popup list in minutes.</designerProperty>
    <designerProperty>Key: Enabled,   DisplayName: Enabled,   FieldType: Boolean, DefaultValue: True,  Description: Enable/Disable the widget.</designerProperty>
    <designerProperty>Key: Visible,   DisplayName: Visible,   FieldType: Boolean, DefaultValue: True,  Description: Show/Hide the widget.</designerProperty>
    <designerProperty>Key: Classes,   DisplayName: Classes,   FieldType: String,  DefaultValue: ,      Description: Classes added to the HTML tag.</designerProperty>
    <designerProperty>Key: Style,     DisplayName: Style,     FieldType: String,  DefaultValue: ,      Description: Styles added to the HTML tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Destroy">_destroy</name>
      <comment>
Prepares the Widget for safe removal from DOM. Detaches all event
handlers and removes jQuery.data attributes to avoid memory leaks.
Calls destroy method of any child Kendo widgets.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getAnimation" HideFromIDE="true">_getanimation</name>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
    </method>
    <method>
      <name DesignerName="getClasses" HideFromIDE="true">_getclasses</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getCulture" HideFromIDE="true">_getculture</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getDateInput" HideFromIDE="true">_getdateinput</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getDates" HideFromIDE="true">_getdates</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getDisableDates" HideFromIDE="true">_getdisabledates</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getEnabled" HideFromIDE="true">_getenabled</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getFormat" HideFromIDE="true">_getformat</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getInterval" HideFromIDE="true">_getinterval</name>
      <returntype>int</returntype>
    </method>
    <method>
      <name DesignerName="getMax" HideFromIDE="true">_getmax</name>
      <returntype>long</returntype>
    </method>
    <method>
      <name DesignerName="getMin" HideFromIDE="true">_getmin</name>
      <returntype>long</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getParseFormats" HideFromIDE="true">_getparseformats</name>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
    </method>
    <method>
      <name DesignerName="getStyle" HideFromIDE="true">_getstyle</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getValue" HideFromIDE="true">_getvalue</name>
      <returntype>long</returntype>
    </method>
    <method>
      <name DesignerName="getVisible" HideFromIDE="true">_getvisible</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setAnimation" HideFromIDE="true">_setanimation</name>
      <comment>
Configures the opening and closing animations of the popups.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/animation
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Animation</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setClasses" HideFromIDE="true">_setclasses</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Classes</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setCulture" HideFromIDE="true">_setculture</name>
      <comment>
Specifies the culture info used by the widget.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/culture
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Culture</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDateInput" HideFromIDE="true">_setdateinput</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DateInput</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDates" HideFromIDE="true">_setdates</name>
      <comment>
Specifies a list of dates which will be passed to the month template of the DateView.
All dates which match the date portion of the selected date will be used to re-bind the TimeView.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Dates</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setDisableDates" HideFromIDE="true">_setdisabledates</name>
      <comment>
An array that will be used to determine which dates to be disabled for selection by the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>DisableDates</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setEnabled" HideFromIDE="true">_setenabled</name>
      <comment>
 Enable/Disable the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Enabled</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setFormat" HideFromIDE="true">_setformat</name>
      <comment>
 https://docs.telerik.com/kendo-ui/framework/globalization/dateformatting
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Format</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setInterval" HideFromIDE="true">_setinterval</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Interval</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMax" HideFromIDE="true">_setmax</name>
      <comment>
Specifies the maximum date, which the calendar can show. (default: Date(2099, 11, 31))
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MaxValue</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setMin" HideFromIDE="true">_setmin</name>
      <comment>
Specifies the minimum date that the calendar can show. (default: Date(1900, 0, 1))
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>MinValue</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setParseFormats" HideFromIDE="true">_setparseformats</name>
      <comment>
Specifies the formats which are used to parse the value set with value() method or by direct input.
If not set the value of the options.format and options.timeFormat will be used.
Note that value of the format option is always used.
The timeFormat value also will be used if defined.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ParseFormats</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setStyle" HideFromIDE="true">_setstyle</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Style</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setValue" HideFromIDE="true">_setvalue</name>
      <comment>
 Gets / Sets the value of the widget
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setVisible" HideFromIDE="true">_setvisible</name>
      <comment>
 Show/Hide the widget.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Visible</name>
        <type>boolean</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Animation">_animation</name>
      <comment>
Configures the opening and closing animations of the popups.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/animation
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Classes">_classes</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Culture">_culture</name>
      <comment>
Specifies the culture info used by the widget.
https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker/configuration/culture
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DateInput">_dateinput</name>
      <comment>

</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Dates">_dates</name>
      <comment>
Specifies a list of dates which will be passed to the month template of the DateView.
All dates which match the date portion of the selected date will be used to re-bind the TimeView.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="DisableDates">_disabledates</name>
      <comment>
An array that will be used to determine which dates to be disabled for selection by the widget.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Enabled">_enabled</name>
      <comment>
 Enable/Disable the widget.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Format">_format</name>
      <comment>
 https://docs.telerik.com/kendo-ui/framework/globalization/dateformatting
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Interval">_interval</name>
      <comment>

</comment>
      <returntype>int</returntype>
      <parameter>
        <name>Value</name>
        <type>int</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Max">_max</name>
      <comment>
Specifies the maximum date, which the calendar can show. (default: Date(2099, 11, 31))
</comment>
      <returntype>long</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Min">_min</name>
      <comment>
Specifies the minimum date that the calendar can show. (default: Date(1900, 0, 1))
</comment>
      <returntype>long</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <property>
      <name DesignerName="ParseFormats">_parseformats</name>
      <comment>
Specifies the formats which are used to parse the value set with value() method or by direct input.
If not set the value of the options.format and options.timeFormat will be used.
Note that value of the format option is always used.
The timeFormat value also will be used if defined.
</comment>
      <returntype>anywheresoftware.b4a.objects.collections.List</returntype>
      <parameter>
        <name>Value</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Style">_style</name>
      <comment>

</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Value">_value</name>
      <comment>
 Gets / Sets the value of the widget
</comment>
      <returntype>long</returntype>
      <parameter>
        <name>Value</name>
        <type>long</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Visible">_visible</name>
      <comment>
 Show/Hide the widget.
</comment>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <field>
      <name DesignerName="bElement">_belement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="kObject">_kobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="kObjectWrapper">_kobjectwrapper</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
    <field>
      <name DesignerName="jObject">_jobject</name>
      <returntype>com.ab.banano.BANanoObject</returntype>
    </field>
  </class>
  <class>
    <name>b4j.example.bananokendoradiobutton</name>
    <shortname>BANanoKendoRadioButton</shortname>
    <event>Click(Event As BANanoEvent)</event>
    <event>ContextMenu(Event As BANanoEvent)</event>
    <event>Change(Event As BANanoEvent)</event>
    <designerProperty>Key: LabelText,          DisplayName: LabelText,          FieldType: String,  DefaultValue: ,      Description: LabelText</designerProperty>
    <designerProperty>Key: Checked,            DisplayName: Checked,            FieldType: Boolean, DefaultValue: False, Description: Checked</designerProperty>
    <designerProperty>Key: LabelStyle,         DisplayName: LabelStyle,         FieldType: String,  DefaultValue: ,      Description: Styles added to the label tag.</designerProperty>
    <designerProperty>Key: LabelClasses,       DisplayName: LabelClasses,       FieldType: String,  DefaultValue: ,      Description: Classes added to the label tag.</designerProperty>
    <designerProperty>Key: RadioButtonStyle,   DisplayName: RadioButtonStyle,   FieldType: String,  DefaultValue: ,      Description: Styles added to the radio tag.</designerProperty>
    <designerProperty>Key: RadioButtonClasses, DisplayName: RadioButtonClasses, FieldType: String,  DefaultValue: ,      Description: Classes added to the radio tag.</designerProperty>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="AddToParent">_addtoparent</name>
      <returntype>String</returntype>
      <parameter>
        <name>targetID</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="DesignerCreateView">_designercreateview</name>
      <returntype>String</returntype>
      <parameter>
        <name>Target</name>
        <type>com.ab.banano.BANanoElement</type>
      </parameter>
      <parameter>
        <name>Props</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="getChecked" HideFromIDE="true">_getchecked</name>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="getLabelText" HideFromIDE="true">_getlabeltext</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="getName" HideFromIDE="true">_getname</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>CallBack</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Remove">_remove</name>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="setChecked" HideFromIDE="true">_setchecked</name>
      <returntype>String</returntype>
      <parameter>
        <name>Checked</name>
        <type>boolean</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="setLabelText" HideFromIDE="true">_setlabeltext</name>
      <returntype>String</returntype>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <property>
      <name DesignerName="Checked">_checked</name>
      <returntype>boolean</returntype>
      <parameter>
        <name>Value</name>
        <type>boolean</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="LabelText">_labeltext</name>
      <returntype>String</returntype>
      <parameter>
        <name>Value</name>
        <type>String</type>
      </parameter>
    </property>
    <property>
      <name DesignerName="Name">_name</name>
      <comment>
 Gets the lowercased widget name
</comment>
      <returntype>String</returntype>
    </property>
    <field>
      <name DesignerName="bLabelElement">_blabelelement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
    <field>
      <name DesignerName="bRadioButtonElement">_bradiobuttonelement</name>
      <returntype>com.ab.banano.BANanoElement</returntype>
    </field>
  </class>
  <version>0.1</version>
  <author>Peter Tübben</author>
</root>